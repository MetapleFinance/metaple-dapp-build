{"version":3,"file":"static/js/583.55618f22.chunk.js","mappings":"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","sources":["hooks/useHttpLocations.js","hooks/ENS/useENSContentHash.js","utils/getTokenLogoURL.js","components/Logo/Logo.js","components/Logo/CurrencyLogo.js","components/mtpl/ConnectWallet.js","hooks/ENS/useENS.js","hooks/ENS/useENSName.js","hooks/ENS/useENSAddress.js","utils/trades.js","hooks/Trades.js","hooks/useTokenAllowance.js","hooks/useApproveCallback.js","hooks/useCallWithGasPrice.js","hooks/usePairs.js","hooks/useTransactionDeadline.js","hooks/useUDEPairs.js","state/swap/hooks.js","hooks/useParsedQueryString.js","state/transactions/hooks.js","state/user/hooks/index.js","state/wallet/hooks.js","utils/isZero.js","utils/maxAmountSpend.js","utils/prices.js","utils/wrappedCurrency.js"],"sourcesContent":["import { useMemo } from 'react';\r\nimport contenthashToUri from '../utils/contenthashToUri';\r\nimport { parseENSAddress } from '../utils/ENS/parseENSAddress';\r\nimport uriToHttp from '../utils/uriToHttp';\r\nimport useENSContentHash from './ENS/useENSContentHash';\r\n\r\nexport default function useHttpLocations(uri) {\r\n    const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri]);\r\n    const resolvedContentHash = useENSContentHash(ens === null || ens === undefined ? undefined : ens.ensName);\r\n    return useMemo(() => {\r\n        if (ens) {\r\n            return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : [];\r\n        }\r\n        return uri ? uriToHttp(uri) : [];\r\n    }, [ens, resolvedContentHash.contenthash, uri]);\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport isZero from '../../utils/isZero';\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName) {\r\n    let _a; let _b; let _c;\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!ensName)\r\n            return [undefined];\r\n        try {\r\n            return ensName ? [namehash(ensName)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [ensName]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-void,no-cond-assign\r\n    const resolverAddress = (_a = resolverAddressResult.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress, false);\r\n    const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument);\r\n    return {\r\n        // eslint-disable-next-line no-cond-assign,no-void\r\n        contenthash: (_c = (_b = contenthash.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: resolverAddressResult.loading || contenthash.loading,\r\n    };\r\n}\r\n","const getTokenLogoURL = (address) => `https://dapp.metaple.finance/tokens/${address}.png`;\r\nexport default getTokenLogoURL;","import React, { useState } from 'react';\r\nimport { HelpIcon } from '@pancakeswap/uikit';\r\n\r\nfunction __rest (s, e) {\r\n    const t = {};\r\n    // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top,no-plusplus,no-redeclare\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\nconst BAD_SRCS = {};\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo = (_a) => {\r\n    const { srcs, alt } = _a; const rest = __rest(_a, [\"srcs\", \"alt\"]);\r\n    const [, refresh] = useState(0);\r\n    const src = srcs.find((s) => !BAD_SRCS[s]);\r\n    if (src) {\r\n        return (React.createElement(\"img\", { ...rest, alt, src, onError: () => {\r\n                if (src)\r\n                    BAD_SRCS[src] = true;\r\n                refresh((i) => i + 1);\r\n            }}));\r\n    }\r\n    return React.createElement(HelpIcon, { ...rest});\r\n};\r\nexport default Logo;","import { ETHER } from '@udegoswap/sdk';\r\nimport { Token } from \"@udegoswap/sdk\";\r\nimport { BinanceIcon } from '@pancakeswap/uikit';\r\nimport React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport useHttpLocations from '../../hooks/useHttpLocations';\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks';\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL';\r\nimport Logo from './Logo';\r\n\r\nconst StyledLogo = styled(Logo) `\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`;\r\nexport default function CurrencyLogo({ currency, size = '24px', style, }) {\r\n    let _a;\r\n    const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined);\r\n    const srcs = useMemo(() => {\r\n        if (currency === ETHER)\r\n            return [];\r\n        if (currency instanceof Token) {\r\n            if (currency instanceof WrappedTokenInfo) {\r\n                return [...uriLocations, getTokenLogoURL(currency.address)];\r\n            }\r\n            return [getTokenLogoURL(currency.address)];\r\n        }\r\n        return [];\r\n    }, [currency, uriLocations]);\r\n    if (currency === ETHER) {\r\n        return React.createElement(BinanceIcon, { width: size, style });\r\n    }\r\n    // eslint-disable-next-line no-cond-assign\r\n    return React.createElement(StyledLogo, { size, srcs, alt: `${(_a = currency === null || currency === undefined ? undefined : currency.symbol) !== null && _a !== undefined ? _a : 'token'} logo`, style });\r\n}\r\n","import React from \"react\";\r\nimport {ConnectorNames} from \"../../utils/web3React\";\r\nimport useConnect from \"../../hooks/useConnect\";\r\n\r\nconst ConnectWallet = () => {\r\n    const { login } = useConnect()\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    \r\n    return (\r\n        <>\r\n            <button className=\"px-5 py-3 text-sm text-center text-white bg-gradient-to-r from-pink-500 to-pink-600 rounded-lg font-medium hover:from-sky-700 hover:to-blue-700 transition-all duration-700\" onClick={() => setShowModal(true)} disable><span>Connect Wallet</span></button>\r\n                {\r\n                    showModal ? \r\n                    <>\r\n                    <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\r\n                    <div className=\"relative w-auto my-6 mx-auto max-w-md\">\r\n                        {/*content*/}\r\n                        <div className=\"border-0 rounded-3xl shadow-lg relative flex flex-col w-full bg-white dark:bg-black outline-none focus:outline-none\">\r\n                        {/*header*/}\r\n                        <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 dark:border-gray-600 dark:border-opacity-30 rounded-t\">\r\n                            <h3 className=\"text-lg font-semibold dark:text-white\">Connect Wallet</h3>\r\n                            <button className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-40 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\" onClick={() => setShowModal(false)}>\r\n                            <span className=\"bg-transparent text-black dark:text-white hover:text-indigo-600 h-6 w-6 text-2xl block outline-none focus:outline-none\">×</span>\r\n                            </button>\r\n                        </div>\r\n                        {/*body*/}\r\n                        <div className=\"relative p-6 flex-auto\">\r\n                            <p className=\"my-0 text-blueGray-500 text-lg leading-relaxed\">\r\n                            <div className=\"grid grid-cols-2\">\r\n                                <div className=\"col-span-1\">\r\n                                <div onClick={() => {\r\n                                    // // console.log(ConnectorNames.Injected)\r\n                                    login(ConnectorNames.Injected)\r\n                                }} style={{cursor: 'pointer'}} className=\"w-full flex items-center justify-center flex-col\">\r\n                                    <img src=\"images/meta.webp\" alt=\"\" className=\"w-10 h-10 mx-auto mb-4\" />\r\n                                    <div className=\"text-black dark:text-white text-xs font-semibold\">Metamask</div>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-span-1\">\r\n                                <div\r\n                                    onClick={() => {\r\n                                        // // console.log(ConnectorNames.WalletConnect)\r\n                                        login(ConnectorNames.WalletConnect)\r\n                                    }}\r\n                                    className=\"w-full flex items-center justify-center flex-col\">\r\n                                    {/* <img src=\"images/meta.webp\" alt=\"\" className=\"w-10 h-10 mx-auto mb-4\" /> */}\r\n                                    <svg viewBox=\"0 0 40 40\" width=\"40px\" color=\"text\" xmlns=\"http://www.w3.org/2000/svg\" class=\"w-10 h-10 mx-auto mb-4\"><path d=\"M8.68096 12.4756C14.9323 6.39698 25.0677 6.39698 31.3191 12.4756L32.0714 13.2071C32.384 13.511 32.384 14.0038 32.0714 14.3077L29.4978 16.8103C29.3415 16.9622 29.0881 16.9622 28.9318 16.8103L27.8965 15.8036C23.5354 11.563 16.4647 11.563 12.1036 15.8036L10.9948 16.8817C10.8385 17.0336 10.5851 17.0336 10.4288 16.8817L7.85517 14.3791C7.54261 14.0752 7.54261 13.5824 7.85517 13.2785L8.68096 12.4756ZM36.6417 17.6511L38.9322 19.8783C39.2448 20.1823 39.2448 20.675 38.9322 20.979L28.6039 31.022C28.2913 31.3259 27.7846 31.3259 27.472 31.022C27.472 31.022 27.472 31.022 27.472 31.022L20.1416 23.8942C20.0634 23.8182 19.9367 23.8182 19.8586 23.8942C19.8586 23.8942 19.8586 23.8942 19.8586 23.8942L12.5283 31.022C12.2157 31.3259 11.709 31.3259 11.3964 31.022C11.3964 31.022 11.3964 31.022 11.3964 31.022L1.06775 20.9788C0.755186 20.6749 0.755186 20.1821 1.06775 19.8782L3.35833 17.6509C3.6709 17.347 4.17767 17.347 4.49024 17.6509L11.8208 24.7789C11.8989 24.8549 12.0256 24.8549 12.1038 24.7789C12.1038 24.7789 12.1038 24.7789 12.1038 24.7789L19.4339 17.6509C19.7465 17.347 20.2533 17.347 20.5658 17.6509C20.5658 17.6509 20.5658 17.6509 20.5658 17.6509L27.8964 24.7789C27.9745 24.8549 28.1012 24.8549 28.1794 24.7789L35.5098 17.6511C35.8223 17.3471 36.3291 17.3471 36.6417 17.6511Z\" fill=\"#0369a1\"></path></svg>\r\n                                    <div className=\"text-black dark:text-white text-xs font-semibold\">WalletConnect</div>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            </p>\r\n                        </div>\r\n                        {/*footer*/}\r\n                        <div className=\"flex items-center flex-col justify-end px-6 py-4 border-t border-solid border-blueGray-200 dark:border-gray-600 dark:border-opacity-30 rounded-b\">\r\n                            <div className=\"text-sm text-sky-600 font-semibold mb-4\">Haven’t got a crypto wallet yet?</div>\r\n                            <button\r\n                            className=\"bg-sky-500 hover:bg-pink-600 text-white active:bg-sky-600 font-bold uppercase text-xs w-full px-6 py-3 rounded-xl shadow hover:shadow-lg outline-none focus:outline-none ease-linear transition-all duration-150\" type=\"button\" onClick={() => setShowModal(false)}>Close</button>\r\n                            {/* <button className=\"bg-emerald-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\" onClick={() => setShowModal(false)}>Save Changes</button> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"opacity-75 fixed inset-0 z-40 bg-black backdrop-blur-xl\"></div>\r\n                </>\r\n                : null }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ConnectWallet;","import { isAddress } from '../../utils';\r\nimport useENSAddress from './useENSAddress';\r\nimport useENSName from './useENSName';\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(nameOrAddress) {\r\n    const validated = isAddress(nameOrAddress);\r\n    const reverseLookup = useENSName(validated || undefined);\r\n    const lookup = useENSAddress(nameOrAddress);\r\n    return {\r\n        loading: reverseLookup.loading || lookup.loading,\r\n        address: validated || lookup.address,\r\n        // eslint-disable-next-line no-nested-ternary\r\n        name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n    };\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport { isAddress, isZero } from '../../utils';\r\n\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\nimport useDebounce from '../useDebounce';\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address) {\r\n    let _a; let _b; let _c;\r\n    const debouncedAddress = useDebounce(address, 200);\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!debouncedAddress || !isAddress(debouncedAddress))\r\n            return [undefined];\r\n        try {\r\n            return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [debouncedAddress]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const resolverAddressResult = (_a = resolverAddress.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\r\n    const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument);\r\n    const changed = debouncedAddress !== address;\r\n    return {\r\n        // eslint-disable-next-line no-nested-ternary,no-cond-assign,no-void\r\n        ENSName: changed ? null : (_c = (_b = name.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: changed || resolverAddress.loading || name.loading,\r\n    };\r\n}","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport isZero from '../../utils/isZero';\r\n\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\nimport useDebounce from '../useDebounce';\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName) {\r\n    let _a; let _b; let _c;\r\n    const debouncedName = useDebounce(ensName, 200);\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!debouncedName)\r\n            return [undefined];\r\n        try {\r\n            return debouncedName ? [namehash(debouncedName)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [debouncedName]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-void,no-cond-assign\r\n    const resolverAddressResult = (_a = resolverAddress.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\r\n    const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument);\r\n    const changed = debouncedName !== ensName;\r\n    return {\r\n        // eslint-disable-next-line no-cond-assign,no-nested-ternary,no-void\r\n        address: changed ? null : (_c = (_b = addr.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: changed || resolverAddress.loading || addr.loading,\r\n    };\r\n}\r\n","import { currencyEquals } from '@udegoswap/sdk';\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index';\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(tradeA, tradeB, minimumDelta = ZERO_PERCENT) {\r\n    if (tradeA && !tradeB)\r\n        return false;\r\n    if (tradeB && !tradeA)\r\n        return true;\r\n    if (!tradeA || !tradeB)\r\n        return undefined;\r\n    if (tradeA.tradeType !== tradeB.tradeType ||\r\n        !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n        !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)) {\r\n        throw new Error('Trades are not comparable');\r\n    }\r\n    if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n        return tradeA.executionPrice.lessThan(tradeB.executionPrice);\r\n    }\r\n    return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice);\r\n}\r\nexport default isTradeBetter;","import { Trade } from '@udegoswap/sdk';\r\nimport flatMap from 'lodash/flatMap';\r\nimport { useMemo } from 'react';\r\nimport { isTradeBetter } from '../utils/trades';\r\nimport { useUserSingleHopOnly } from '../state/user/hooks';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES, BETTER_TRADE_LESS_HOPS_THRESHOLD, ADDITIONAL_BASES, } from '../config/constants/index';\r\nimport { PairState, usePairs } from './usePairs';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\nimport { useUnsupportedTokens } from './Tokens';\r\n\r\nfunction useAllCommonPairs(currencyA, currencyB) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const [tokenA, tokenB] = chainId\r\n        ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n        : [undefined, undefined];\r\n\r\n    const bases = useMemo(() => {\r\n        if (!chainId)\r\n            return [];\r\n        // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n        const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\r\n        const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\r\n        const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\r\n        return [...common, ...additionalA, ...additionalB];\r\n    }, [chainId, tokenA, tokenB]);\r\n\r\n    const basePairs = useMemo(() => flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase])), [bases]);\r\n    const allPairCombinations = useMemo(() => tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base) => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base) => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n        ]\r\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            .filter(([tokenA_, tokenB_]) => {\r\n            if (!chainId)\r\n                return true;\r\n            const customBases = CUSTOM_BASES[chainId];\r\n            // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n            const customBasesA = customBases === null || customBases === undefined ? undefined : customBases[tokenA_.address];\r\n            // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n            const customBasesB = customBases === null || customBases === undefined ? undefined : customBases[tokenB_.address];\r\n            if (!customBasesA && !customBasesB)\r\n                return true;\r\n            if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base)))\r\n                return false;\r\n            if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base)))\r\n                return false;\r\n            return true;\r\n        })\r\n        : [], [tokenA, tokenB, bases, basePairs, chainId]);\r\n    const allPairs = usePairs(allPairCombinations);\r\n    // only pass along valid pairs, non-duplicated pairs\r\n    return useMemo(() => Object.values(allPairs\r\n        // filter out invalid pairs\r\n        .filter((result) => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n        // filter out duplicated pairs\r\n        .reduce((memo, [, curr]) => {\r\n        let _a;\r\n            // eslint-disable-next-line no-cond-assign,no-void\r\n        memo[curr.liquidityToken.address] = (_a = memo[curr.liquidityToken.address]) !== null && _a !== undefined ? _a : curr;\r\n        return memo;\r\n    }, {})), [allPairs]);\r\n}\r\nconst MAX_HOPS = 3;\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\n// eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\nexport function useTradeExactIn(currencyAmountIn, currencyOut) {\r\n    // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n    const allowedPairs = useAllCommonPairs(currencyAmountIn === null || currencyAmountIn === undefined ? undefined : currencyAmountIn.currency, currencyOut);\r\n    const [singleHopOnly] = useUserSingleHopOnly();\r\n    // // console.log(allowedPairs)\r\n\r\n    return useMemo(() => {\r\n        if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n            if (singleHopOnly) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                return Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ?? null\r\n            }\r\n            // search through trades with varying hops, find best trade out of them\r\n            let bestTradeSoFar = null;\r\n            // eslint-disable-next-line no-plusplus\r\n            for (let i = 1; i <= MAX_HOPS; i++) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                const currentTrade = Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ?? null\r\n                // if current trade is best yet, save it\r\n                if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n                    bestTradeSoFar = currentTrade;\r\n                }\r\n            }\r\n            return bestTradeSoFar;\r\n        }\r\n        return null;\r\n    }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly]);\r\n}\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\n\r\nexport function useTradeExactOut(currencyIn, currencyAmountOut) {\r\n    // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n    const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut === null || currencyAmountOut === undefined ? undefined : currencyAmountOut.currency);\r\n    const [singleHopOnly] = useUserSingleHopOnly();\r\n    return useMemo(() => {\r\n        if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n            if (singleHopOnly) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                return Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ?? null\r\n            }\r\n            // search through trades with varying hops, find best trade out of them\r\n            let bestTradeSoFar = null;\r\n            // eslint-disable-next-line no-plusplus\r\n            for (let i = 1; i <= MAX_HOPS; i++) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                const currentTrade = Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ?? null\r\n                if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n                    bestTradeSoFar = currentTrade;\r\n                }\r\n            }\r\n            return bestTradeSoFar;\r\n        }\r\n        return null;\r\n    }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly]);\r\n}\r\nexport function useIsTransactionUnsupported(currencyIn, currencyOut) {\r\n    const unsupportedTokens = useUnsupportedTokens();\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokenIn = wrappedCurrency(currencyIn, chainId);\r\n    const tokenOut = wrappedCurrency(currencyOut, chainId);\r\n    // if unsupported list loaded & either token on list, mark as unsupported\r\n    if (unsupportedTokens) {\r\n        if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\r\n            return true;\r\n        }\r\n        if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","import { TokenAmount } from '@udegoswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { useTokenContract } from './useContract';\r\nimport { useSingleCallResult } from '../state/multicall/hooks';\r\n\r\nfunction useTokenAllowance(token, owner, spender) {\r\n    // eslint-disable-next-line no-void\r\n    const contract = useTokenContract(token === null || token === void 0 ? void 0 : token.address, false);\r\n    const inputs = useMemo(() => [owner, spender], [owner, spender]);\r\n    const allowance = useSingleCallResult(contract, 'allowance', inputs).result;\r\n    return useMemo(() => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined), [token, allowance]);\r\n}\r\nexport default useTokenAllowance;","import { MaxUint256 } from '@ethersproject/constants';\r\nimport { ETHER } from '@udegoswap/sdk';\r\nimport { useCallback, useMemo } from 'react';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { PC_ROUTER_ADDRESS } from '../config/config';\r\nimport useTokenAllowance from './useTokenAllowance';\r\nimport { Field } from '../state/swap/actions';\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks';\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices';\r\nimport { calculateGasMargin } from '../utils';\r\nimport { useTokenContract } from './useContract';\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice';\r\nimport {TokenAmount} from \"@udegoswap/sdk\";\r\n\r\nexport const ApprovalState = {\r\n    \"UNKNOWN\": 0,\r\n    \"NOT_APPROVED\": 1,\r\n    \"PENDING\": 2,\r\n    \"APPROVED\": 3\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(amountToApprove, spender) {\r\n    const { account } = useActiveWeb3React();\r\n    const { callWithGasPrice } = useCallWithGasPrice();\r\n    const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\r\n    const currentAllowance = useTokenAllowance(token, account !== null && account !== undefined ? account : undefined, spender);\r\n    const pendingApproval = useHasPendingApproval(token === null || token === undefined ? undefined : token.address, spender);\r\n    // check the current approval status\r\n    const approvalState = useMemo(() => {\r\n        if (!amountToApprove || !spender)\r\n            return ApprovalState.UNKNOWN;\r\n        if (amountToApprove.currency === ETHER)\r\n            return ApprovalState.APPROVED;\r\n        // we might not have enough data to know whether or not we need to approve\r\n        if (!currentAllowance)\r\n            return ApprovalState.UNKNOWN;\r\n\r\n        // amountToApprove will be defined if currentAllowance is\r\n        // eslint-disable-next-line no-nested-ternary\r\n        return currentAllowance.lessThan(amountToApprove)\r\n            ? pendingApproval\r\n                ? ApprovalState.PENDING\r\n                : ApprovalState.NOT_APPROVED\r\n            : ApprovalState.APPROVED;\r\n    }, [amountToApprove, currentAllowance, pendingApproval, spender]);\r\n    const tokenContract = useTokenContract(token === null || token === undefined ? undefined : token.address);\r\n    const addTransaction = useTransactionAdder();\r\n    const approve = useCallback(async () => {\r\n        if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n            console.error('approve was called unnecessarily');\r\n            return;\r\n        }\r\n        if (!token) {\r\n            console.error('no token');\r\n            return;\r\n        }\r\n        if (!tokenContract) {\r\n            console.error('tokenContract is null');\r\n            return;\r\n        }\r\n        if (!amountToApprove) {\r\n            console.error('missing amount to approve');\r\n            return;\r\n        }\r\n        if (!spender) {\r\n            console.error('no spender');\r\n            return;\r\n        }\r\n        let useExact = false;\r\n        const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n            // general fallback for tokens who restrict approval amounts\r\n            useExact = true;\r\n            return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString());\r\n        });\r\n        // eslint-disable-next-line consistent-return\r\n        return callWithGasPrice(tokenContract, 'approve', [spender, useExact ? amountToApprove.raw.toString() : MaxUint256], {\r\n            gasLimit: calculateGasMargin(estimatedGas),\r\n        })\r\n            .then((response) => {\r\n            addTransaction(response, {\r\n                summary: `Approve ${amountToApprove.currency.symbol}`,\r\n                approval: { tokenAddress: token.address, spender },\r\n            });\r\n        })\r\n            .catch((error) => {\r\n            console.error('Failed to approve token', error);\r\n            throw error;\r\n        });\r\n    }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice]);\r\n    return [approvalState, approve];\r\n}\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade, allowedSlippage = 0) {\r\n    const amountToApprove = useMemo(() => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined), [trade, allowedSlippage]);\r\n    return useApproveCallback(amountToApprove, PC_ROUTER_ADDRESS);\r\n}\r\n\r\nexport function useApproveCallbackForRemove(pairToApprove, spender) {\r\n    const { account } = useActiveWeb3React();\r\n    const { callWithGasPrice } = useCallWithGasPrice();\r\n    const token = pairToApprove ? pairToApprove.liquidityToken : undefined;\r\n    const currentAllowance = useTokenAllowance(token, account !== null && account !== undefined ? account : undefined, spender);\r\n    const pendingApproval = useHasPendingApproval(token === null || token === undefined ? undefined : token.address, spender);\r\n    // check the current approval status\r\n    const approvalState = useMemo(() => {\r\n        if (!pairToApprove || !spender)\r\n            return ApprovalState.UNKNOWN;\r\n        if (pairToApprove.currency === ETHER)\r\n            return ApprovalState.APPROVED;\r\n        // we might not have enough data to know whether or not we need to approve\r\n        if (!currentAllowance)\r\n            return ApprovalState.UNKNOWN;\r\n        // pairToApprove will be defined if currentAllowance is\r\n        // eslint-disable-next-line no-nested-ternary\r\n        return parseFloat(currentAllowance.toFixed(2)) <= 0\r\n            ? pendingApproval\r\n                ? ApprovalState.PENDING\r\n                : ApprovalState.NOT_APPROVED\r\n            : ApprovalState.APPROVED;\r\n    }, [pairToApprove, currentAllowance, pendingApproval, spender]);\r\n    const tokenContract = useTokenContract(token === null || token === undefined ? undefined : token.address);\r\n    const addTransaction = useTransactionAdder();\r\n    const approve = useCallback(async () => {\r\n        if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n            console.error('approve was called unnecessarily');\r\n            return;\r\n        }\r\n        if (!token) {\r\n            console.error('no token');\r\n            return;\r\n        }\r\n        if (!tokenContract) {\r\n            console.error('tokenContract is null');\r\n            return;\r\n        }\r\n        if (!pairToApprove) {\r\n            console.error('missing amount to approve');\r\n            return;\r\n        }\r\n        if (!spender) {\r\n            console.error('no spender');\r\n            return;\r\n        }\r\n        let useExact = false;\r\n        const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n            // general fallback for tokens who restrict approval amounts\r\n            useExact = true;\r\n            return tokenContract.estimateGas.approve(spender, pairToApprove.raw.toString());\r\n        });\r\n        // eslint-disable-next-line consistent-return\r\n        return callWithGasPrice(tokenContract, 'approve', [spender, useExact ? pairToApprove.raw.toString() : MaxUint256], {\r\n            gasLimit: calculateGasMargin(estimatedGas),\r\n        })\r\n            .then((response) => {\r\n                addTransaction(response, {\r\n                    summary: `Approve ${pairToApprove.liquidityToken.symbol}`,\r\n                    approval: { tokenAddress: token.address, spender },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Failed to approve token', error);\r\n                throw error;\r\n            });\r\n    }, [approvalState, token, tokenContract, pairToApprove, spender, addTransaction, callWithGasPrice]);\r\n    return [approvalState, approve];\r\n}\r\n","import { useCallback } from 'react';\r\nimport { get } from 'lodash';\r\nimport { useGasPrice } from '../state/user/hooks';\r\n/**\r\n * Perform a contract call with a gas price returned from useGasPrice\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport function useCallWithGasPrice() {\r\n    const gasPrice = useGasPrice();\r\n    const callWithGasPrice = useCallback(async (contract, methodName, methodArgs = [], overrides = null) => {\r\n        const contractMethod = get(contract, methodName);\r\n        const hasManualGasPriceOverride = overrides === null || overrides === undefined ? undefined : overrides.gasPrice;\r\n        const tx = await contractMethod(...methodArgs, hasManualGasPriceOverride ? ({ ...overrides}) : ({...overrides, gasPrice}));\r\n        return tx;\r\n    }, [gasPrice]);\r\n    return { callWithGasPrice };\r\n}","import { TokenAmount, Pair } from '@udegoswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport abi from '@uniswap/v2-core/build/IUniswapV2Pair.json';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\n\r\nconst PAIR_INTERFACE = new Interface(abi.abi);\r\n// eslint-disable-next-line import/no-mutable-exports,no-var\r\nexport const PairState = {\r\n    \"LOADING\": 0,\r\n    \"NOT_EXISTS\": 1,\r\n    \"EXISTS\": 2,\r\n    \"INVALID\": 3,\r\n}\r\n\r\nexport function usePairs(currencies) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useMemo(() => currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n    ]), [chainId, currencies]);\r\n\r\n    const pairAddresses = useMemo(() => tokens.map(([tokenA, tokenB]) => tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined), [tokens]);\r\n    // console.log(pairAddresses)\r\n    const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\r\n\r\n    return useMemo(() => results.map((result, i) => {\r\n            const { result: reserves, loading } = result;\r\n            const tokenA = tokens[i][0];\r\n            const tokenB = tokens[i][1];\r\n\r\n            if (loading)\r\n                return [PairState.LOADING, null];\r\n            if (!tokenA || !tokenB || tokenA.equals(tokenB))\r\n                return [PairState.INVALID, null];\r\n            if (!reserves)\r\n                return [PairState.NOT_EXISTS, null];\r\n            const { reserve0, reserve1 } = reserves;\r\n            const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\r\n\r\n            return [\r\n                PairState.EXISTS,\r\n                new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n            ];\r\n        }), [results, tokens]);\r\n}\r\nexport function usePair(tokenA, tokenB) {\r\n    return usePairs([[tokenA, tokenB]])[0];\r\n}","import { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp';\r\nimport {BigNumber} from \"@ethersproject/bignumber\";\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline() {\r\n    const ttl = 60 * 20;\r\n    const blockTimestamp = parseInt(new Date() / 1000);\r\n    return useMemo(() => {\r\n        if (blockTimestamp && ttl)\r\n            return BigNumber.from((blockTimestamp + ttl).toString());\r\n        return undefined;\r\n    }, [blockTimestamp, ttl]);\r\n}","import { TokenAmount, Pair } from '@udegoswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport IUniswapV2PairABI from '@uniswap/v2-core/build/IUniswapV2Pair.json';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI.abi);\r\n// eslint-disable-next-line import/no-mutable-exports,no-var\r\nexport const PairState = {\r\n    \"LOADING\": 0,\r\n    \"NOT_EXISTS\": 1,\r\n    \"EXISTS\": 2,\r\n    \"INVALID\": 3,\r\n}\r\n\r\nexport function useUDEPairs(currencies) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useMemo(() => currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n    ]), [chainId, currencies]);\r\n\r\n    const pairAddresses = useMemo(() => tokens.map(([tokenA, tokenB]) => tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined), [tokens]);\r\n    const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\r\n\r\n    return useMemo(() => results.map((result, i) => {\r\n        const { result: reserves, loading } = result;\r\n        const tokenA = tokens[i][0];\r\n        const tokenB = tokens[i][1];\r\n\r\n        if (loading)\r\n            return [PairState.LOADING, null];\r\n        if (!tokenA || !tokenB || tokenA.equals(tokenB))\r\n            return [PairState.INVALID, null];\r\n        if (!reserves)\r\n            return [PairState.NOT_EXISTS, null];\r\n        const { reserve0, reserve1 } = reserves;\r\n        const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\r\n\r\n        return [\r\n            PairState.EXISTS,\r\n            new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n        ];\r\n    }), [results, tokens]);\r\n}\r\nexport function useUDEPair(tokenA, tokenB) {\r\n    return useUDEPairs([[tokenA, tokenB]])[0];\r\n}","import { parseUnits } from '@ethersproject/units';\r\nimport { CurrencyAmount, ETHER, JSBI, TokenAmount } from '@udegoswap/sdk';\r\nimport { Token } from \"@udegoswap/sdk\";\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useParsedQueryString from '../../hooks/useParsedQueryString';\r\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades';\r\nimport { isAddress } from '../../utils';\r\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices';\r\nimport { useCurrency } from '../../hooks/Tokens';\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport useENS from \"../../hooks/ENS/useENS\";\r\nimport { useCurrencyBalances } from '../wallet/hooks';\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions';\r\nimport { useUserSlippageTolerance } from '../user/hooks';\r\nimport tokens from '../../config/tokens';\r\n\r\nexport function useSwapState() {\r\n    return useSelector((state) => state.swap);\r\n}\r\nexport function useSwapActionHandlers() {\r\n    const dispatch = useDispatch();\r\n    const onCurrencySelection = useCallback((field, currency) => {\r\n        dispatch(selectCurrency({\r\n            field,\r\n            // eslint-disable-next-line no-nested-ternary\r\n            currencyId: currency ? currency.address : currency === ETHER ? 'BNB' : '',\r\n        }));\r\n    }, [dispatch]);\r\n    const onSwitchTokens = useCallback(() => {\r\n        dispatch(switchCurrencies());\r\n    }, [dispatch]);\r\n    const onUserInput = useCallback((field, typedValue) => {\r\n        dispatch(typeInput({ field, typedValue }));\r\n    }, [dispatch]);\r\n    const onChangeRecipient = useCallback((recipient) => {\r\n        dispatch(setRecipient({ recipient }));\r\n    }, [dispatch]);\r\n    return {\r\n        onSwitchTokens,\r\n        onCurrencySelection,\r\n        onUserInput,\r\n        onChangeRecipient,\r\n    };\r\n}\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value, currency) {\r\n    if (!value || !currency) {\r\n        return undefined;\r\n    }\r\n    try {\r\n        const typedValueParsed = parseUnits(value, currency.decimals).toString();\r\n        if (typedValueParsed !== '0') {\r\n            return currency instanceof Token\r\n                ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n                : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed));\r\n        }\r\n    }\r\n    catch (error) {\r\n        // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n        console.debug(`Failed to parse input amount: \"${value}\"`, error);\r\n    }\r\n    // necessary for all paths to return a value\r\n    return undefined;\r\n}\r\nconst BAD_RECIPIENT_ADDRESSES = [\r\n    '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\r\n    '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a',\r\n    '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\r\n];\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade, checksummedAddress) {\r\n    return (trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n        trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress));\r\n}\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo() {\r\n    let _a; let _b;\r\n    const { account } = useActiveWeb3React();\r\n\r\n    const {\r\n        independentField,\r\n        typedValue,\r\n        [Field.INPUT]: {\r\n            currencyId: inputCurrencyId\r\n        },\r\n        [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId\r\n        },\r\n        recipient,\r\n    } = useSwapState();\r\n\r\n    const inputCurrency = useCurrency(inputCurrencyId);\r\n    const outputCurrency = useCurrency(outputCurrencyId);\r\n\r\n    const recipientLookup = useENS(recipient !== null && recipient !== undefined ? recipient : undefined);\r\n    // eslint-disable-next-line no-cond-assign\r\n    const to = (_a = (recipient === null ? account : recipientLookup.address)) !== null && _a !== undefined ? _a : null;\r\n    const relevantTokenBalances = useCurrencyBalances(account !== null && account !== undefined ? account : undefined, [\r\n        inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined,\r\n        outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined,\r\n    ]);\r\n    const isExactIn = independentField === Field.INPUT;\r\n    // eslint-disable-next-line no-cond-assign\r\n    const parsedAmount = tryParseAmount(typedValue, (_b = (isExactIn ? inputCurrency : outputCurrency)) !== null && _b !== undefined ? _b : undefined);\r\n\r\n    const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined);\r\n    const bestTradeExactOut = useTradeExactOut(inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined, !isExactIn ? parsedAmount : undefined);\r\n\r\n    const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut;\r\n    const currencyBalances = {\r\n        [Field.INPUT]: relevantTokenBalances[0],\r\n        [Field.OUTPUT]: relevantTokenBalances[1],\r\n    };\r\n    const currencies = {\r\n        [Field.INPUT]: inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined,\r\n        [Field.OUTPUT]: outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined,\r\n    };\r\n    let inputError;\r\n    if (!account) {\r\n        inputError = 'Connect Wallet';\r\n    }\r\n    if (!parsedAmount) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Enter an amount';\r\n    }\r\n    if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Select a token';\r\n    }\r\n    const formattedTo = isAddress(to);\r\n    if (!to || !formattedTo) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Enter a recipient';\r\n    }\r\n    else if (BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n        (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n        (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Invalid recipient';\r\n    }\r\n    const [allowedSlippage] = useUserSlippageTolerance();\r\n    const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage);\r\n    // compare input balance to max input based on version\r\n    const [balanceIn, amountIn] = [\r\n        currencyBalances[Field.INPUT],\r\n        slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n    ];\r\n    if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n        // eslint-disable-next-line no-sequences\r\n        inputError = `Insufficient ${amountIn.currency.symbol} balance`\r\n    }\r\n\r\n    return {\r\n        currencies,\r\n        currencyBalances,\r\n        parsedAmount,\r\n        v2Trade: v2Trade !== null && v2Trade !== undefined ? v2Trade : undefined,\r\n        inputError,\r\n    };\r\n}\r\nfunction parseCurrencyFromURLParameter(urlParam, isToCurrency=false) {\r\n    if (typeof urlParam === 'string') {\r\n        const valid = isAddress(urlParam);\r\n        // console.log(tokens.mlx.address)\r\n        if (valid)\r\n            return valid;\r\n        if (urlParam.toUpperCase() === 'BNB')\r\n            return 'BNB';\r\n        if (valid === false)\r\n            return 'BNB';\r\n    }\r\n    if ( isToCurrency ) {\r\n        return tokens.mlx.address;\r\n    }\r\n    return 'BNB';\r\n}\r\nfunction parseTokenAmountURLParameter(urlParam) {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : '';\r\n}\r\nfunction parseIndependentFieldURLParameter(urlParam) {\r\n    return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT;\r\n}\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/;\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nfunction validatedRecipient(recipient) {\r\n    if (typeof recipient !== 'string')\r\n        return null;\r\n    const address = isAddress(recipient);\r\n    if (address)\r\n        return address;\r\n    if (ENS_NAME_REGEX.test(recipient))\r\n        return recipient;\r\n    if (ADDRESS_REGEX.test(recipient))\r\n        return recipient;\r\n    return null;\r\n}\r\nexport function queryParametersToSwapState(parsedQs) {\r\n    let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency);\r\n    let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency, true);\r\n\r\n    if (inputCurrency === outputCurrency) {\r\n        if (typeof parsedQs.outputCurrency === 'string') {\r\n            inputCurrency = '';\r\n        }\r\n        else {\r\n            outputCurrency = '';\r\n        }\r\n    }\r\n    const recipient = validatedRecipient(parsedQs.recipient);\r\n    return {\r\n        [Field.INPUT]: {\r\n            currencyId: inputCurrency,\r\n        },\r\n        [Field.OUTPUT]: {\r\n            currencyId: outputCurrency,\r\n        },\r\n        typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n        independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n        recipient,\r\n    };\r\n}\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch() {\r\n    const { chainId } = useActiveWeb3React();\r\n    const dispatch = useDispatch();\r\n    const parsedQs = useParsedQueryString();\r\n    const [result, setResult] = useState();\r\n    useEffect(() => {\r\n        if (!chainId)\r\n            return;\r\n        const parsed = queryParametersToSwapState(parsedQs);\r\n        dispatch(replaceSwapState({\r\n            typedValue: parsed.typedValue,\r\n            field: parsed.independentField,\r\n            inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n            outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n            recipient: null,\r\n        }));\r\n        setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, chainId]);\r\n    return result;\r\n}","import { parse } from 'qs';\r\nimport { useMemo } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function useParsedQueryString() {\r\n    const { search } = useLocation();\r\n    return useMemo(() => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}), [search]);\r\n}\r\n","import { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport { addTransaction } from './actions';\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder() {\r\n    const { chainId, account } = useActiveWeb3React();\r\n    const dispatch = useDispatch();\r\n    return useCallback((response, { summary, approval, claim, } = {}) => {\r\n        if (!account)\r\n            return;\r\n        if (!chainId)\r\n            return;\r\n        const { hash } = response;\r\n        if (!hash) {\r\n            throw Error('No transaction hash found.');\r\n        }\r\n        dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }));\r\n    }, [dispatch, chainId, account]);\r\n}\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions() {\r\n    let _a;\r\n    const { chainId } = useActiveWeb3React();\r\n    const state = useSelector((s) => s.transactions);\r\n    // eslint-disable-next-line no-nested-ternary,no-cond-assign,no-void\r\n    return chainId ? (_a = state[chainId]) !== null && _a !== void 0 ? _a : {} : {};\r\n}\r\nexport function useIsTransactionPending(transactionHash) {\r\n    const transactions = useAllTransactions();\r\n    if (!transactionHash || !transactions[transactionHash])\r\n        return false;\r\n    return !transactions[transactionHash].receipt;\r\n}\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx) {\r\n    return new Date().getTime() - tx.addedTime < 86400000;\r\n}\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress, spender) {\r\n    const allTransactions = useAllTransactions();\r\n    return useMemo(() => typeof tokenAddress === 'string' &&\r\n        typeof spender === 'string' &&\r\n        Object.keys(allTransactions).some((hash) => {\r\n            const tx = allTransactions[hash];\r\n            if (!tx)\r\n                return false;\r\n            if (tx.receipt) {\r\n                return false;\r\n            }\r\n            const { approval } = tx;\r\n            if (!approval)\r\n                return false;\r\n            return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }), [allTransactions, spender, tokenAddress]);\r\n}","import { ChainId, Pair } from '@udegoswap/sdk';\r\nimport { Pair as UDEPair, Token } from '@udegoswap/sdk';\r\nimport flatMap from 'lodash/flatMap';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../../config/constants/index';\r\nimport useActiveWeb3React from \"../../../hooks/useWeb3\";\r\nimport { useAllTokens } from '../../../hooks/Tokens';\r\nimport { addSerializedPair, addSerializedToken, FarmStakedOnly, muteAudio, removeSerializedToken, toggleTheme as toggleThemeAction, unmuteAudio, updateUserDeadline, updateUserExpertMode, updateUserFarmStakedOnly, updateUserSingleHopOnly, updateUserSlippageTolerance, updateGasPrice, addWatchlistToken, addWatchlistPool, updateUserPoolStakedOnly, updateUserPoolsViewMode, updateUserFarmsViewMode, updateUserPredictionChartDisclaimerShow, updateUserPredictionAcceptedRisk, updateUserUsernameVisibility, updateUserExpertModeAcknowledgementShow, } from '../actions';\r\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers';\r\n\r\nexport function useAudioModeManager() {\r\n    const dispatch = useDispatch();\r\n    const audioPlay = useSelector((state) => state.user.audioPlay);\r\n    const toggleSetAudioMode = useCallback(() => {\r\n        if (audioPlay) {\r\n            dispatch(muteAudio());\r\n        }\r\n        else {\r\n            dispatch(unmuteAudio());\r\n        }\r\n    }, [audioPlay, dispatch]);\r\n    return [audioPlay, toggleSetAudioMode];\r\n}\r\nexport function useIsExpertMode() {\r\n    return useSelector((state) => state.user.userExpertMode);\r\n}\r\nexport function useExpertModeManager() {\r\n    const dispatch = useDispatch();\r\n    const expertMode = useIsExpertMode();\r\n    const toggleSetExpertMode = useCallback(() => {\r\n        dispatch(updateUserExpertMode({ userExpertMode: !expertMode }));\r\n    }, [expertMode, dispatch]);\r\n    return [expertMode, toggleSetExpertMode];\r\n}\r\nexport function useThemeManager() {\r\n    const dispatch = useDispatch();\r\n    const isDark = useSelector((state) => state.user.isDark);\r\n    const toggleTheme = useCallback(() => {\r\n        dispatch(toggleThemeAction());\r\n    }, [dispatch]);\r\n    return [isDark, toggleTheme];\r\n}\r\nexport function useUserSingleHopOnly() {\r\n    const dispatch = useDispatch();\r\n    const singleHopOnly = useSelector((state) => state.user.userSingleHopOnly);\r\n    const setSingleHopOnly = useCallback((newSingleHopOnly) => {\r\n        dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }));\r\n    }, [dispatch]);\r\n    return [singleHopOnly, setSingleHopOnly];\r\n}\r\nexport function useUserSlippageTolerance() {\r\n    const dispatch = useDispatch();\r\n    const userSlippageTolerance = useSelector((state) => state.user.userSlippageTolerance);\r\n    const setUserSlippageTolerance = useCallback((slippage) => {\r\n        dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }));\r\n    }, [dispatch]);\r\n    return [userSlippageTolerance, setUserSlippageTolerance];\r\n}\r\nexport function useUserFarmStakedOnly(isActive) {\r\n    const dispatch = useDispatch();\r\n    const userFarmStakedOnly = useSelector((state) => state.user.userFarmStakedOnly);\r\n    const setUserFarmStakedOnly = useCallback((stakedOnly) => {\r\n        const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE;\r\n        dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }));\r\n    }, [dispatch]);\r\n    return [\r\n        userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\r\n        setUserFarmStakedOnly,\r\n    ];\r\n}\r\nexport function useUserPoolStakedOnly() {\r\n    const dispatch = useDispatch();\r\n    const userPoolStakedOnly = useSelector((state) => state.user.userPoolStakedOnly);\r\n    const setUserPoolStakedOnly = useCallback((stakedOnly) => {\r\n        dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }));\r\n    }, [dispatch]);\r\n    return [userPoolStakedOnly, setUserPoolStakedOnly];\r\n}\r\nexport function useUserPoolsViewMode() {\r\n    const dispatch = useDispatch();\r\n    const userPoolsViewMode = useSelector((state) => state.user.userPoolsViewMode);\r\n    const setUserPoolsViewMode = useCallback((viewMode) => {\r\n        dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }));\r\n    }, [dispatch]);\r\n    return [userPoolsViewMode, setUserPoolsViewMode];\r\n}\r\nexport function useUserFarmsViewMode() {\r\n    const dispatch = useDispatch();\r\n    const userFarmsViewMode = useSelector((state) => state.user.userFarmsViewMode);\r\n    const setUserFarmsViewMode = useCallback((viewMode) => {\r\n        dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }));\r\n    }, [dispatch]);\r\n    return [userFarmsViewMode, setUserFarmsViewMode];\r\n}\r\nexport function useUserPredictionAcceptedRisk() {\r\n    const dispatch = useDispatch();\r\n    const userPredictionAcceptedRisk = useSelector((state) => state.user.userPredictionAcceptedRisk);\r\n    const setUserPredictionAcceptedRisk = useCallback((acceptedRisk) => {\r\n        dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }));\r\n    }, [dispatch]);\r\n    return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk];\r\n}\r\nexport function useUserPredictionChartDisclaimerShow() {\r\n    const dispatch = useDispatch();\r\n    const userPredictionChartDisclaimerShow = useSelector((state) => state.user.userPredictionChartDisclaimerShow);\r\n    const setPredictionUserChartDisclaimerShow = useCallback((showDisclaimer) => {\r\n        dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }));\r\n    }, [dispatch]);\r\n    return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow];\r\n}\r\nexport function useUserExpertModeAcknowledgementShow() {\r\n    const dispatch = useDispatch();\r\n    const userExpertModeAcknowledgementShow = useSelector((state) => state.user.userExpertModeAcknowledgementShow);\r\n    const setUserExpertModeAcknowledgementShow = useCallback((showAcknowledgement) => {\r\n        dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }));\r\n    }, [dispatch]);\r\n    return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow];\r\n}\r\nexport function useUserUsernameVisibility() {\r\n    const dispatch = useDispatch();\r\n    const userUsernameVisibility = useSelector((state) => state.user.userUsernameVisibility);\r\n    const setUserUsernameVisibility = useCallback((usernameVisibility) => {\r\n        dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }));\r\n    }, [dispatch]);\r\n    return [userUsernameVisibility, setUserUsernameVisibility];\r\n}\r\nexport function useUserTransactionTTL() {\r\n    const dispatch = useDispatch();\r\n    const userDeadline = useSelector((state) => state.user.userDeadline);\r\n    const setUserDeadline = useCallback((deadline) => {\r\n        dispatch(updateUserDeadline({ userDeadline: deadline }));\r\n    }, [dispatch]);\r\n    return [userDeadline, setUserDeadline];\r\n}\r\nexport function useAddUserToken() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((token) => {\r\n        dispatch(addSerializedToken({ serializedToken: serializeToken(token) }));\r\n    }, [dispatch]);\r\n}\r\nexport function useRemoveUserAddedToken() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((chainId, address) => {\r\n        dispatch(removeSerializedToken({ chainId, address }));\r\n    }, [dispatch]);\r\n}\r\nexport function useGasPrice() {\r\n    const chainId = process.env.REACT_APP_CHAIN_ID;\r\n    const userGas = useSelector((state) => state.user.gasPrice);\r\n    return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet;\r\n}\r\nexport function useGasPriceManager() {\r\n    const dispatch = useDispatch();\r\n    const userGasPrice = useGasPrice();\r\n    const setGasPrice = useCallback((gasPrice) => {\r\n        dispatch(updateGasPrice({ gasPrice }));\r\n    }, [dispatch]);\r\n    return [userGasPrice, setGasPrice];\r\n}\r\nfunction serializePair(pair) {\r\n    return {\r\n        token0: serializeToken(pair.token0),\r\n        token1: serializeToken(pair.token1),\r\n    };\r\n}\r\nexport function usePairAdder() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((pair) => {\r\n        dispatch(addSerializedPair({ serializedPair: serializePair(pair) }));\r\n    }, [dispatch]);\r\n}\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]) {\r\n    return new Token(tokenA.chainId, UDEPair.getAddress(tokenA, tokenB), 18, 'UDE-LP', 'UDEGO LPs');\r\n}\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs() {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useAllTokens();\r\n    // pinned pairs\r\n    // eslint-disable-next-line no-cond-assign,no-void,no-nested-ternary\r\n    const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n    // pairs for every token against every base\r\n    const generatedPairs = useMemo(() => chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress];\r\n            // for each token on the current chain,\r\n            return (\r\n            // loop though all bases on the current chain\r\n                // eslint-disable-next-line no-cond-assign,no-void\r\n                (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                if (base.address === token.address) {\r\n                    return null;\r\n                }\r\n                return [base, token];\r\n            })\r\n                .filter((p) => p !== null));\r\n        })\r\n        : [], [tokens, chainId]);\r\n    // pairs saved by users\r\n    const savedSerializedPairs = useSelector(({ user: { pairs } }) => pairs);\r\n    const userPairs = useMemo(() => {\r\n        if (!chainId || !savedSerializedPairs)\r\n            return [];\r\n        const forChain = savedSerializedPairs[chainId];\r\n        if (!forChain)\r\n            return [];\r\n        return Object.keys(forChain).map((pairId) => [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]);\r\n    }, [savedSerializedPairs, chainId]);\r\n    const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\r\n    return useMemo(() => {\r\n        // dedupes pairs of tokens in the combined list\r\n        const keyed = combinedList.reduce((memo, [tokenA, tokenB]) => {\r\n            const sorted = tokenA.sortsBefore(tokenB);\r\n            const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\r\n            if (memo[key])\r\n                return memo;\r\n            memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\r\n            return memo;\r\n        }, {});\r\n        return Object.keys(keyed).map((key) => keyed[key]);\r\n    }, [combinedList]);\r\n}\r\nexport const useWatchlistTokens = () => {\r\n    let _a;\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const savedTokens = (_a = useSelector((state) => state.user.watchlistTokens)) !== null && _a !== void 0 ? _a : [];\r\n    const updatedSavedTokens = useCallback((address) => {\r\n        dispatch(addWatchlistToken({ address }));\r\n    }, [dispatch]);\r\n    return [savedTokens, updatedSavedTokens];\r\n};\r\nexport const useWatchlistPools = () => {\r\n    let _a;\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const savedPools = (_a = useSelector((state) => state.user.watchlistPools)) !== null && _a !== void 0 ? _a : [];\r\n    const updateSavedPools = useCallback((address) => {\r\n        dispatch(addWatchlistPool({ address }));\r\n    }, [dispatch]);\r\n    return [savedPools, updateSavedPools];\r\n};","import { CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@udegoswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport ERC20_INTERFACE from '../../config/abi/erc20';\r\nimport { useAllTokens } from '../../hooks/Tokens';\r\nimport { useMulticallContract } from '../../hooks/useContract';\r\nimport { isAddress } from '../../utils';\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks';\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent BNB balances.\r\n */\r\nexport function useBNBBalances(uncheckedAddresses) {\r\n    const multicallContract = useMulticallContract();\r\n    const addresses = useMemo(() => uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a) => a !== false)\r\n            .sort()\r\n        : [], [uncheckedAddresses]);\r\n    const results = useSingleContractMultipleData(multicallContract, 'getEthBalance', addresses.map((address) => [address]));\r\n    return useMemo(() => addresses.reduce((memo, address, i) => {\r\n        let _a; let _b;\r\n        // eslint-disable-next-line no-cond-assign,no-void\r\n        const value = (_b = (_a = results === null || results === void 0 ? void 0 : results[i]) === null || _a === void 0 ? void 0 : _a.result) === null || _b === void 0 ? void 0 : _b[0];\r\n        if (value)\r\n            memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()));\r\n        return memo;\r\n    }, {}), [addresses, results]);\r\n}\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(address, tokens) {\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const validatedTokens = useMemo(() => { let _a; return (_a = tokens === null || tokens === void 0 ? void 0 : tokens.filter((t) => isAddress(t === null || t === void 0 ? void 0 : t.address) !== false)) !== null && _a !== void 0 ? _a : []; }, [tokens]);\r\n    const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens]);\r\n    const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address]);\r\n    const anyLoading = useMemo(() => balances.some((callState) => callState.loading), [balances]);\r\n    return [\r\n        useMemo(\r\n            () =>\r\n                address && validatedTokens.length > 0\r\n                    ? validatedTokens.reduce((memo, token, i) => {\r\n                const value = balances?.[i]?.result?.[0]\r\n                const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n                if (amount) {\r\n                    memo[token.address] = new TokenAmount(token, amount)\r\n                }\r\n                return memo\r\n            }, {})\r\n        : {},\r\n            [address, validatedTokens, balances],\r\n        ),\r\n        anyLoading,\r\n    ];\r\n}\r\nexport function useTokenBalances(address, tokens) {\r\n    return useTokenBalancesWithLoadingIndicator(address, tokens)[0];\r\n}\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account, token) {\r\n    const tokenBalances = useTokenBalances(account, [token]);\r\n    if (!token)\r\n        return undefined;\r\n    return tokenBalances[token.address];\r\n}\r\nexport function useCurrencyBalances(account, currencies) {\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const tokens = useMemo(() => { let _a; return (_a = currencies === null || currencies === void 0 ? void 0 : currencies.filter((currency) => true)) !== null && _a !== void 0 ? _a : []; }, [currencies]);\r\n    const tokenBalances = useTokenBalances(account, tokens)\r\n    const containsBNB = useMemo(() => currencies?.some((currency) => currency && currency[\"name\"] === \"BNB\") ?? false, [currencies])\r\n    const ethBalance = useBNBBalances(containsBNB ? [account] : [])\r\n\r\n    return useMemo(() =>\r\n        currencies?.map((currency) => {\r\n            if (!account || !currency) return undefined\r\n            if (currency[\"name\"] === \"BNB\") return ethBalance[account]\r\n            if (currency) return tokenBalances[currency.address]\r\n            return undefined\r\n        }) ?? []\r\n    , [account, currencies, ethBalance, tokenBalances]);\r\n}\r\nexport function useCurrencyBalance(account, currency) {\r\n    return useCurrencyBalances(account, [currency])[0];\r\n}\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances() {\r\n    const { account } = useWeb3React();\r\n    const allTokens = useAllTokens();\r\n    // eslint-disable-next-line no-void\r\n    const allTokensArray = useMemo(() => Object.values(allTokens !== null && allTokens !== void 0 ? allTokens : {}), [allTokens]);\r\n    // eslint-disable-next-line no-void\r\n    const balances = useTokenBalances(account !== null && account !== void 0 ? account : undefined, allTokensArray);\r\n    // eslint-disable-next-line no-void\r\n    return balances !== null && balances !== void 0 ? balances : {};\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString) {\r\n    return /^0x0*$/.test(hexNumberString);\r\n}","import { CurrencyAmount, ETHER, JSBI } from '@udegoswap/sdk';\r\nimport { MIN_BNB } from '../config/constants/index';\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount) {\r\n    if (!currencyAmount)\r\n        return undefined;\r\n    if (currencyAmount.currency === ETHER) {\r\n        if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n            return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB));\r\n        }\r\n        return CurrencyAmount.ether(JSBI.BigInt(0));\r\n    }\r\n    return currencyAmount;\r\n}\r\nexport default maxAmountSpend;\r\n","import { CurrencyAmount, JSBI, Percent, TokenAmount } from '@udegoswap/sdk';\r\nimport { BLOCKED_PRICE_IMPACT_NON_EXPERT, ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_LOW, ALLOWED_PRICE_IMPACT_MEDIUM, } from '../config/constants/index';\r\nimport { Field } from '../state/swap/actions';\r\nimport { basisPointsToPercent } from './index';\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000));\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000));\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE);\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade) {\r\n    // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n    // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n    const realizedLPFee = !trade\r\n        ? undefined\r\n        : ONE_HUNDRED_PERCENT.subtract(trade.route.pairs.reduce((currentFee) => currentFee.multiply(INPUT_FRACTION_AFTER_FEE), ONE_HUNDRED_PERCENT));\r\n    // remove lp fees from price impact\r\n    const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined;\r\n    // the x*y=k impact\r\n    const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n        // eslint-disable-next-line no-void\r\n        ? new Percent(priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.numerator, priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.denominator)\r\n        : undefined;\r\n    // the amount of the input that accrues to LPs\r\n    const realizedLPFeeAmount = realizedLPFee &&\r\n        trade &&\r\n        (trade.inputAmount instanceof TokenAmount\r\n            ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n            : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient));\r\n    return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount };\r\n}\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(trade, allowedSlippage) {\r\n    const pct = basisPointsToPercent(allowedSlippage);\r\n    return {\r\n        // eslint-disable-next-line no-void\r\n        [Field.INPUT]: trade === null || trade === void 0 ? void 0 : trade.maximumAmountIn(pct),\r\n        // eslint-disable-next-line no-void\r\n        [Field.OUTPUT]: trade === null || trade === void 0 ? void 0 : trade.minimumAmountOut(pct),\r\n    };\r\n}\r\nexport function warningSeverity(priceImpact) {\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)))\r\n        return 4;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_HIGH)))\r\n        return 3;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)))\r\n        return 2;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_LOW)))\r\n        return 1;\r\n    return 0;\r\n}\r\nexport function formatExecutionPrice(trade, inverted) {\r\n    if (!trade) {\r\n        return '';\r\n    }\r\n    return inverted\r\n        ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${trade.outputAmount.currency.symbol}`\r\n        : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${trade.inputAmount.currency.symbol}`;\r\n}\r\n/**\r\n * Helper to multiply a Price object by an arbitrary amount\r\n */\r\nexport const multiplyPriceByAmount = (price, amount, significantDigits = 18) => {\r\n    if (!price) {\r\n        return 0;\r\n    }\r\n    return parseFloat(price.toSignificant(significantDigits)) * amount;\r\n};\r\n","import { ETHER, TokenAmount, WETH } from '@udegoswap/sdk';\r\nimport {Token} from \"@udegoswap/sdk\";\r\n\r\nexport function wrappedCurrency(currency, chainId) {\r\n    // eslint-disable-next-line no-nested-ternary\r\n    return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined;\r\n}\r\nexport function wrappedCurrencyAmount(currencyAmount, chainId) {\r\n    const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined;\r\n    return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined;\r\n}\r\nexport function unwrappedToken(token) {\r\n    if (token.equals(WETH[token.chainId]))\r\n        return ETHER;\r\n    return token;\r\n}"],"names":["useHttpLocations","uri","ens","useMemo","parseENSAddress","undefined","resolvedContentHash","ensName","_a","_b","_c","ensNodeArgument","namehash","error","registrarContract","useENSRegistrarContract","resolverAddressResult","useSingleCallResult","resolverAddress","result","resolverContract","useENSResolverContract","isZero","contenthash","loading","useENSContentHash","uriToHttp","contenthashToUri","address","BAD_SRCS","srcs","alt","rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","useState","refresh","src","find","React","onError","HelpIcon","StyledLogo","styled","Logo","size","CurrencyLogo","currency","style","uriLocations","WrappedTokenInfo","logoURI","ETHER","Token","getTokenLogoURL","BinanceIcon","width","symbol","login","useConnect","showModal","setShowModal","className","onClick","disable","ConnectorNames","cursor","viewBox","color","xmlns","class","d","fill","type","useENS","nameOrAddress","validated","isAddress","reverseLookup","debouncedAddress","useDebounce","toLowerCase","substr","name","changed","ENSName","useENSName","lookup","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","currencyEquals","inputAmount","outputAmount","Error","equalTo","executionPrice","lessThan","raw","multiply","add","ONE_HUNDRED_PERCENT","useAllCommonPairs","currencyA","currencyB","chainId","useActiveWeb3React","wrappedCurrency","tokenA","tokenB","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","flatMap","base","map","otherBase","allPairCombinations","filter","tokens","Boolean","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","equals","allPairs","usePairs","values","PairState","reduce","memo","curr","liquidityToken","useTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","useUserSingleHopOnly","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","useTradeExactOut","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","useUnsupportedTokens","tokenIn","tokenOut","keys","includes","token","owner","spender","contract","useTokenContract","inputs","allowance","TokenAmount","toString","ApprovalState","useApproveCallback","amountToApprove","account","callWithGasPrice","useCallWithGasPrice","currentAllowance","useTokenAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","PENDING","NOT_APPROVED","UNKNOWN","tokenContract","addTransaction","useTransactionAdder","approve","useCallback","console","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","calculateGasMargin","then","response","summary","approval","tokenAddress","useApproveCallbackFromTrade","trade","allowedSlippage","computeSlippageAdjustedAmounts","Field","PC_ROUTER_ADDRESS","useApproveCallbackForRemove","pairToApprove","parseFloat","toFixed","gasPrice","useGasPrice","methodName","methodArgs","overrides","contractMethod","get","hasManualGasPriceOverride","tx","PAIR_INTERFACE","Interface","abi","currencies","pairAddresses","Pair","results","useMultipleContractSingleData","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","useTransactionDeadline","ttl","blockTimestamp","parseInt","Date","BigNumber","IUniswapV2PairABI","useUDEPairs","useUDEPair","useSwapState","useSelector","state","swap","useSwapActionHandlers","dispatch","useDispatch","onCurrencySelection","field","selectCurrency","currencyId","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","value","typedValueParsed","parseUnits","decimals","JSBI","CurrencyAmount","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","route","path","some","pairs","pair","useDerivedSwapInfo","inputError","independentField","inputCurrencyId","outputCurrencyId","inputCurrency","useCurrency","outputCurrency","recipientLookup","to","relevantTokenBalances","useCurrencyBalances","isExactIn","parsedAmount","bestTradeExactIn","bestTradeExactOut","v2Trade","currencyBalances","formattedTo","useUserSlippageTolerance","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","isToCurrency","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","test","validatedRecipient","exactAmount","isNaN","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","useEffect","parsed","replaceSwapState","claim","hash","from","useAllTransactions","transactions","allTransactions","receipt","getTime","addedTime","isTransactionRecent","useIsExpertMode","user","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","userSlippageTolerance","slippage","updateUserSlippageTolerance","userGas","process","ChainId","GAS_PRICE_GWEI","toV2LiquidityToken","UDEPair","useTrackedTokenPairs","useAllTokens","pinnedPairs","PINNED_PAIRS","generatedPairs","BASES_TO_TRACK_LIQUIDITY_FOR","savedSerializedPairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","sorted","key","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","callState","amount","useTokenBalances","useTokenBalance","tokenBalances","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","addresses","a","sort","useSingleContractMultipleData","useBNBBalances","useCurrencyBalance","hexNumberString","maxAmountSpend","currencyAmount","MIN_BNB","BASE_FEE","Percent","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","quotient","pct","basisPointsToPercent","maximumAmountIn","minimumAmountOut","warningSeverity","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","WETH","wrappedCurrencyAmount","unwrappedToken"],"sourceRoot":""}