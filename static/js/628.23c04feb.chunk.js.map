{"version":3,"file":"static/js/628.23c04feb.chunk.js","mappings":"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","sources":["hooks/useWrapCallback.js","utils/truncateHash.js","hooks/useSwapCallback.js","pages/swap-mtpl/ListToken.js","pages/swap-mtpl/TokenSelect.js","components/Loader/CircleLoader.js","components/Layout/Column.js","pages/swap-mtpl/components/styleds.js","pages/swap-mtpl/components/TradePrice.js","hooks/useLast.js","components/QuestionHelper/index.js","components/Layout/Row.js","pages/swap-mtpl/components/FormattedPriceImpact.js","pages/swap-mtpl/components/SwapRoute.js","pages/swap-mtpl/components/AdvancedSwapDetails.js","pages/swap-mtpl/components/AdvancedSwapDetailsDropdown.js","pages/swap-mtpl/index.js","pages/swap-mtpl/components/confirmPriceImpactWithoutFee.js","hooks/useBUSDPrice.js","pages/home-mtpl/MTPLTVL.js","hooks/useTokenBalance.js","pages/MTPLHome.js","pages/MTPLProfile.js","utils/formatNumber.js"],"sourcesContent":["import { currencyEquals, ETHER, WETH } from '@udegoswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { tryParseAmount } from '../state/swap/hooks';\r\nimport { useTransactionAdder } from '../state/transactions/hooks';\r\nimport { useCurrencyBalance } from '../state/wallet/hooks';\r\nimport { useWETHContract } from './useContract';\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice';\r\n\r\nexport const WrapType = () => {\r\n    WrapType[WrapType.NOT_APPLICABLE = 0] = \"NOT_APPLICABLE\";\r\n    WrapType[WrapType.WRAP = 1] = \"WRAP\";\r\n    WrapType[WrapType.UNWRAP = 2] = \"UNWRAP\";\r\n};\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE };\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(inputCurrency, outputCurrency, typedValue) {\r\n    const { chainId, account } = useActiveWeb3React();\r\n    const { callWithGasPrice } = useCallWithGasPrice();\r\n    const wethContract = useWETHContract();\r\n    const balance = useCurrencyBalance(account !== null && account !== undefined ? account : undefined, inputCurrency);\r\n    // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n    const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue]);\r\n    const addTransaction = useTransactionAdder();\r\n    return useMemo(() => {\r\n        if (!wethContract || !chainId || !inputCurrency || !outputCurrency)\r\n            return NOT_APPLICABLE;\r\n        const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount);\r\n        if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n            return {\r\n                wrapType: WrapType.WRAP,\r\n                execute: sufficientBalance && inputAmount\r\n                    ? async () => {\r\n                        try {\r\n                            const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\r\n                                value: `0x${inputAmount.raw.toString(16)}`,\r\n                            });\r\n                            addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` });\r\n                        }\r\n                        catch (error) {\r\n                            console.error('Could not deposit', error);\r\n                        }\r\n                    }\r\n                    : undefined,\r\n                inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\r\n            };\r\n        }\r\n        if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n            return {\r\n                wrapType: WrapType.UNWRAP,\r\n                execute: sufficientBalance && inputAmount\r\n                    ? async () => {\r\n                        try {\r\n                            const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\r\n                                `0x${inputAmount.raw.toString(16)}`,\r\n                            ]);\r\n                            addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` });\r\n                        }\r\n                        catch (error) {\r\n                            console.error('Could not withdraw', error);\r\n                        }\r\n                    }\r\n                    : undefined,\r\n                inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\r\n            };\r\n        }\r\n        return NOT_APPLICABLE;\r\n    }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice]);\r\n}","const truncateHash = (address, startLength = 4, endLength = 4) => `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`;\r\nexport default truncateHash;","import { JSBI, Percent, Router, TradeType } from '@udegoswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { useGasPrice } from '../state/user/hooks';\r\nimport truncateHash from '../utils/truncateHash';\r\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index';\r\nimport { useTransactionAdder } from '../state/transactions/hooks';\r\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils';\r\nimport isZero from '../utils/isZero';\r\nimport useTransactionDeadline from './useTransactionDeadline';\r\nimport useENS from './ENS/useENS';\r\nimport {showError, showPromise} from \"../config/helpers\";\r\n\r\nexport const SwapCallbackState = {\r\n    'INVALID': 0,\r\n    'LOADING': 1,\r\n    'VALID': 2\r\n};\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(trade, // trade to execute, required\r\nallowedSlippage = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\nrecipientAddressOrName) {\r\n    const { account, chainId, library } = useActiveWeb3React();\r\n    const { address: recipientAddress } = useENS(recipientAddressOrName);\r\n    const recipient = recipientAddressOrName === null ? account : recipientAddress;\r\n    const deadline = useTransactionDeadline();\r\n    // console.log(\"++++++++++ DEADLINE +++++++++ \", deadline)\r\n    return useMemo(() => {\r\n        if (!trade || !recipient || !library || !account || !chainId || !deadline)\r\n            return [];\r\n        const contract = getRouterContract(chainId, library, account);\r\n        if (!contract) {\r\n            return [];\r\n        }\r\n        const swapMethods = [];\r\n        swapMethods.push(Router.swapCallParameters(trade, {\r\n            feeOnTransfer: false,\r\n            allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n            recipient,\r\n            deadline: deadline.toNumber(),\r\n        }));\r\n        if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n            swapMethods.push(Router.swapCallParameters(trade, {\r\n                feeOnTransfer: true,\r\n                allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n                recipient,\r\n                deadline: deadline.toNumber(),\r\n            }));\r\n        }\r\n        return swapMethods.map((parameters) => ({ parameters, contract }));\r\n    }, [account, allowedSlippage, chainId, deadline, library, recipient, trade]);\r\n}\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(trade, // trade to execute, required\r\nallowedSlippage = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\nrecipientAddressOrName) {\r\n    const { account, chainId, library } = useActiveWeb3React();\r\n    const gasPrice = useGasPrice();\r\n    const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName);\r\n    const addTransaction = useTransactionAdder();\r\n    const { address: recipientAddress } = useENS(recipientAddressOrName);\r\n    const recipient = recipientAddressOrName === null ? account : recipientAddress;\r\n    return useMemo(() => {\r\n        if (!trade || !library || !account || !chainId) {\r\n            return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' };\r\n        }\r\n        if (!recipient) {\r\n            if (recipientAddressOrName !== null) {\r\n                return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' };\r\n            }\r\n            return { state: SwapCallbackState.LOADING, callback: null, error: null };\r\n        }\r\n        return {\r\n            state: SwapCallbackState.VALID,\r\n            callback: async function onSwap() {\r\n                const estimatedCalls = await Promise.all(swapCalls.map((call) => {\r\n                    const { parameters: { methodName, args, value }, contract, } = call;\r\n                    const options = !value || isZero(value) ? {} : { value };\r\n                    return contract.estimateGas[methodName](...args, options)\r\n                        .then((gasEstimate) => ({\r\n                            call,\r\n                            gasEstimate,\r\n                        }))\r\n                        .catch((gasError) => {\r\n                        console.error('Gas estimate failed, trying eth_call to extract error', call);\r\n                        return contract.callStatic[methodName](...args, options)\r\n                            .then((result) => {\r\n                            console.error('Unexpected successful call after failed estimate gas', call, gasError, result);\r\n                            return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') };\r\n                        })\r\n                            .catch((callError) => {\r\n                            let _a;\r\n                            console.error('Call threw error', call, callError);\r\n                                // eslint-disable-next-line no-cond-assign\r\n                            const reason = callError.reason || ((_a = callError.data) === null || _a === undefined ? undefined : _a.message) || callError.message;\r\n                            const errorMessage = `The transaction cannot succeed due to error: ${reason !== null && reason !== undefined ? reason : 'Unknown error, check the logs'}.`;\r\n                            return { call, error: new Error(errorMessage) };\r\n                        });\r\n                    });\r\n                }));\r\n                // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n                const successfulEstimation = estimatedCalls.find((el, ix, list) => 'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]));\r\n                if (!successfulEstimation) {\r\n                    const errorCalls = estimatedCalls.filter((call) => 'error' in call);\r\n                    if (errorCalls.length > 0)\r\n                        throw errorCalls[errorCalls.length - 1].error;\r\n                    throw new Error('Unexpected error. Please contact support: none of the calls threw an error');\r\n                }\r\n                const { call: { contract, parameters: { methodName, args, value }, }, gasEstimate, } = successfulEstimation;\r\n                return contract[methodName](...args, {gasLimit: calculateGasMargin(gasEstimate), gasPrice, ...(value && !isZero(value) ? { value, from: account } : { from: account })})\r\n                    .then((response) => {\r\n                    const inputSymbol = trade.inputAmount.currency.symbol;\r\n                    const outputSymbol = trade.outputAmount.currency.symbol;\r\n                    const inputAmount = trade.inputAmount.toSignificant(3);\r\n                    const outputAmount = trade.outputAmount.toSignificant(3);\r\n                    const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`;\r\n                    const withRecipient = recipient === account\r\n                        ? base\r\n                        : `${base} to ${recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                            ? truncateHash(recipientAddressOrName)\r\n                            : recipientAddressOrName}`;\r\n                    showPromise(response.wait())\r\n                    addTransaction(response, {\r\n                        summary: withRecipient,\r\n                    });\r\n                    return response.hash;\r\n                })\r\n                    .catch((error) => {\r\n                    // if the user rejected the tx, pass this along\r\n                    if ((error === null || error === undefined ? undefined : error.code) === 4001) {\r\n                        showError('Transaction Rejected.')\r\n                        throw new Error('Transaction rejected.');\r\n                    }\r\n                    else {\r\n                        // otherwise, the error was unexpected and we need to convey that\r\n                        console.error(`Swap failed`, error, methodName, args, value);\r\n                        showError(`Swap failed: ${error.message}`)\r\n                        throw new Error(`Swap failed: ${error.message}`);\r\n                    }\r\n                });\r\n            },\r\n            error: null,\r\n        };\r\n    }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice]);\r\n}","import PropTypes from 'prop-types'\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\r\n\r\nListToken.propTypes = {\r\n    currency: PropTypes.any,\r\n    item: PropTypes.any,\r\n    selectedToken: PropTypes.any,\r\n    tokenSelected: PropTypes.func\r\n}\r\nexport default function ListToken ({currency, item, selectedToken, tokenSelected}) {\r\n    const {account} = useActiveWeb3React()\r\n    const currencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n\r\n    return (\r\n        <a\r\n            href=\"javascript:void(0);\"\r\n            key={item?.address}\r\n            onClick={() => {tokenSelected(item)}}\r\n            disabled={selectedToken?.address?.toLowerCase() === item?.address?.toLowerCase()}\r\n            className=\"tokens-list-item p-3 border-b last:border-b-0 border-gray-100 border-opacity-10 flex flex-row items-center justify-between hover:bg-black hover:bg-opacity-5 dark:hover:bg-white dark:hover:bg-opacity-25\"\r\n        >\r\n            <div className=\"token-info flex flex-row items-center justify-start\">\r\n            <div className=\"tokan-icon mr-2\">\r\n                <img src={`${item?.tokenImg}?w=248&fit=crop&auto=format`} width={32} alt=\"\" />\r\n            </div>\r\n            <div className=\"tokan-info\">\r\n                <div className=\"text-black dark:text-white text-sm font-semibold mb-1\">\r\n                    {\r\n                        item?.name\r\n                    }\r\n                </div>\r\n                <div className=\"text-black dark:text-white text-opacity-50 text-xs\">\r\n                    {\r\n                        item?.symbol\r\n                    }\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"flex flex-row items-center justify-end\">\r\n                <div className=\"text-black dark:text-white text-opacity-50 text-2sm mr-2\">\r\n                    {`${currencyBalance?.toSignificant(6) ?? '0.0'}`}\r\n                </div>\r\n            </div>\r\n        </a>\r\n        // <ListItem\r\n        //     key={item?.address} button\r\n        //     selected={(selectedToken?.address?.toLowerCase() === item?.address?.toLowerCase()) || (selectedToken?.symbol?.toLowerCase() === item?.symbol?.toLowerCase())}\r\n        //     onClick={() => {tokenSelected(item)}}\r\n        //     disabled={selectedToken?.address?.toLowerCase() === item?.address?.toLowerCase()}\r\n        //     secondaryAction={\r\n        //         <Typography\r\n        //         >\r\n        //             {`${currencyBalance?.toSignificant(6) ?? 'Loading'}`}\r\n        //         </Typography>\r\n        //     }\r\n        // >\r\n        //     <ListItemAvatar>\r\n        //         <Avatar\r\n        //             src={`${item?.tokenImg}?w=248&fit=crop&auto=format`}\r\n        //             srcSet={`${item?.tokenImg}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n        //             alt={item?.name}\r\n        //             loading=\"lazy\"\r\n        //         />\r\n        //     </ListItemAvatar>\r\n        //     <ListItemText\r\n        //         primary={item?.name}\r\n        //         secondary={item?.symbol}\r\n        //     />\r\n        // </ListItem>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"../../redux/store\";\r\nimport {getPoolTokens, getTokens} from \"../../redux/slices/tokens\";\r\nimport {escapeRegExp} from \"../../utils\";\r\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport ListToken from './ListToken';\r\nimport getTokenLogoURL from \"../../utils/getTokenLogoURL\";\r\nimport CurrencyLogo from \"../../components/Logo/CurrencyLogo\";\r\n\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`)\r\n\r\n\r\nexport default function TokenSelect(\r\n    {\r\n        tokenSymbol = \"bnb\",\r\n        isMax=false,\r\n        tokenAddress=\"\",\r\n        label=\"\",\r\n        placeHolder=\"\",\r\n        inputValue=\"\",\r\n        onInputChange=null,\r\n        onItemChange=null,\r\n        tokenImg='./tokens/bnb.png',\r\n        showApprove=true,\r\n        onApprove=null,\r\n        approveText='',\r\n        onMax=null,\r\n        selectedToken,\r\n        isDisabled=true\r\n    }\r\n) {\r\n\r\n    const [symbol, setSymbol] = useState(tokenSymbol);\r\n    const [token, setToken] = useState(tokenImg);\r\n    const [address, setAddress] = useState(tokenAddress);\r\n    const { account } = useActiveWeb3React()\r\n\r\n    const [isDialogOpen, setDialog] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const { tokens } = useSelector((state) => state.tokens);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTokens());\r\n    }, [dispatch]);\r\n\r\n    const selectDialog = () => {\r\n        setDialog(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDialog(false)\r\n    }\r\n\r\n    const tokenSelected = (item) => {\r\n        // console.log(item)\r\n        setToken(item.tokenImg)\r\n        setAddress(item.address)\r\n        setSymbol(item.symbol)\r\n        setDialog(false)\r\n        onItemChange(item)\r\n    }\r\n\r\n    const enforcer = (nextUserInput) => {\r\n        if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n            onInputChange(nextUserInput)\r\n        }\r\n    }\r\n    const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, selectedToken ?? undefined)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"token-select-input p-4 rounded-xl bg-white bg-opacity-5\">\r\n                <div className=\"flex flex-row items-center justify-between\">\r\n                    <div className=\"text-sm text-black dark:text-white text-opacity-50 hover:text-opacity-100 font-semibold\">{label}</div>\r\n                    <div className=\"text-sm text-black dark:text-white hover:text-indigo-500 dark:hover:text-white\">Balance: {selectedCurrencyBalance?.toSignificant(6) ?? '0.0' }</div>\r\n                </div>\r\n                <div className=\"token-row flex flex-row items-center justify-between my-2\">\r\n                    <button className=\"select-source-token token-row flex flex-row items-center justify-start\" onClick={selectDialog}>\r\n                        <div className=\"tokan-icon mr-2 w-6\">\r\n                            {/*<img src={token} alt=\"\" />*/}\r\n                            <CurrencyLogo currency={selectedToken} />\r\n                        </div>\r\n                        <div className=\"token-name text-lg text-black dark:text-white font-semibold mt-1\">\r\n                            {(selectedToken && selectedToken.symbol && selectedToken.symbol.length > 20\r\n                                ? `${selectedToken.symbol.slice(0, 4)}...${selectedToken.symbol.slice(\r\n                                    selectedToken.symbol.length - 5,\r\n                                    selectedToken.symbol.length,\r\n                                )}`\r\n                                : selectedToken?.symbol) || 'Select'}\r\n                        </div>\r\n                        <i className=\"las la-angle-down ml-2 text-black dark:text-white\" />\r\n                    </button>\r\n                    <div className=\"tokan-input\">\r\n                        <input\r\n                            className=\"bg-transparent border-0 p-0 bg-gray-100 w-full outline-none text-sm dark:text-white appearance-none\"\r\n                            inputMode=\"decimal\"\r\n                            maxLength={18}\r\n                            pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n                            x-inputmode=\"decimal\"\r\n                            tabIndex={0}\r\n                            defaultValue={1}\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={inputValue}\r\n                            variant=\"filled\"\r\n                            label={label}\r\n                            placeholder={\"0.0\"}\r\n                            title={label}\r\n                            onInput={(event) => {\r\n                                enforcer(event.target.value.replace(/,/g, '.'))\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isDialogOpen ? (\r\n                <>\r\n                    <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none px-3\">\r\n                        <div className=\"relative w-auto my-6 mx-auto max-w-6xl lg:w-1/4\">\r\n                            {/*content*/}\r\n                            <div className=\"border-0 rounded-3xl shadow-lg relative flex flex-col w-full bg-white dark:bg-indigo-900 outline-none focus:outline-none\">\r\n                                {/*header*/}\r\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 dark:border-gray-100 dark:border-opacity-10 rounded-t\">\r\n                                    <h3 className=\"text-lg font-semibold\">Select a Token</h3>\r\n                                    <button className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-40 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\" onClick={handleClose}>\r\n                                        <span className=\"bg-transparent text-black dark:text-white hover:text-indigo-600 h-6 w-6 text-2xl block outline-none focus:outline-none\">×</span>\r\n                                    </button>\r\n                                </div>\r\n                                {/*body*/}\r\n                                <div className=\"relative p-6 flex-auto\">\r\n                                    {/* <form action role=\"search\" noValidate className=\"DocSearch-Form px-5 py-4 border border-gray-200 dark:border-gray-200 hover:border-indigo-600 dark:border-gray-500 dark:hover:border-white mb-2 rounded-xl\">\r\n                          <label className=\"DocSearch-MagnifierLabel\" htmlFor=\"docsearch-input\" id=\"docsearch-label\">\r\n                            <svg width={20} height={20} className=\"DocSearch-Search-Icon\" viewBox=\"0 0 20 20\"><path d=\"M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z\" stroke=\"stroke-black dark:stroke-white\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\" /></svg>\r\n                          </label>\r\n                          <input className=\"DocSearch-Input font-semibold\" aria-autocomplete=\"list\" aria-labelledby=\"docsearch-label\" id=\"docsearch-input\" autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" placeholder=\"Search Tokens\" maxLength={64} type=\"search\" defaultValue />\r\n                          <button type=\"reset\" title=\"Clear the query\" className=\"DocSearch-Reset\" hidden><svg width={20} height={20} viewBox=\"0 0 20 20\"><path d=\"M10 10l5.09-5.09L10 10l5.09 5.09L10 10zm0 0L4.91 4.91 10 10l-5.09 5.09L10 10z\" stroke=\"#ffffff\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\" /></svg></button>\r\n                        </form> */}\r\n                                    {/* <div className=\"favourite-tokens-container flex flex-wrap align-middle justify-center p-3 px-0 border-b-2 border-gray-100 border-opacity-25\">\r\n                          <a href=\"javascrip:;\" className=\"favourite-token px-2 py-2 flex align-middle justify-center bg-white bg-opacity-25 border border-gray-500 dark:border-gray-100 m-1 relative rounded-md hover:border-gray-700 dark:hover:border-white\"><div className=\"rounded-full overflow-hidden w-6 mx-1\"><img src=\"images/dollar.svg\" className=\"w-full rounded-3xl\" alt=\"\" /></div><span className=\"text-sm text-black dark:text-white mr-2 mt-1\">BNB</span><span className=\"favorite-close text-gray-600 hover:text-red-800\"><i className=\"las la-times\" /></span></a>\r\n                          <a href=\"javascrip:;\" className=\"favourite-token px-2 py-2 flex align-middle justify-center bg-white bg-opacity-25 border border-gray-500 dark:border-gray-100 m-1 relative rounded-md hover:border-gray-700 dark:hover:border-white\"><div className=\"rounded-full overflow-hidden w-6 mx-1\"><img src=\"images/dollar.svg\" className=\"w-full rounded-3xl\" alt=\"\" /></div><span className=\"text-sm text-black dark:text-white mr-2 mt-1\">BNB</span><span className=\"favorite-close text-gray-600 hover:text-red-800\"><i className=\"las la-times\" /></span></a>\r\n                          <a href=\"javascrip:;\" className=\"favourite-token px-2 py-2 flex align-middle justify-center bg-white bg-opacity-25 border border-gray-500 dark:border-gray-100 m-1 relative rounded-md hover:border-gray-700 dark:hover:border-white\"><div className=\"rounded-full overflow-hidden w-6 mx-1\"><img src=\"images/dollar.svg\" className=\"w-full rounded-3xl\" alt=\"\" /></div><span className=\"text-sm text-black dark:text-white mr-2 mt-1\">BNB</span><span className=\"favorite-close text-gray-600 hover:text-red-800\"><i className=\"las la-times\" /></span></a>\r\n                          <a href=\"javascrip:;\" className=\"favourite-token px-2 py-2 flex align-middle justify-center bg-white bg-opacity-25 border border-gray-500 dark:border-gray-100 m-1 relative rounded-md hover:border-gray-700 dark:hover:border-white\"><div className=\"rounded-full overflow-hidden w-6 mx-1\"><img src=\"images/dollar.svg\" className=\"w-full rounded-3xl\" alt=\"\" /></div><span className=\"text-sm text-black dark:text-white mr-2 mt-1\">BNB</span><span className=\"favorite-close text-gray-600 hover:text-red-800\"><i className=\"las la-times\" /></span></a>\r\n                        </div> */}\r\n                                    <div className=\"overflow-hidden\">\r\n                                        <div className=\"token-list\">\r\n                                            {\r\n                                                !tokens && <div loading>Loading Token List...</div>\r\n                                            }\r\n                                            {tokens?.map((tokenItem) => <ListToken key={tokenItem?.address} item={tokenItem} tokenSelected={tokenSelected} selectedToken={selectedToken} currency={tokenItem} />)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/*footer*/}\r\n                                <div className=\"flex items-center flex-col justify-end px-6 py-4 border-t border-solid border-blueGray-200 dark:border-gray-100 dark:border-opacity-10 rounded-b\">\r\n                                    <button\r\n                                        className=\"bg-indigo-500 hover:bg-sky-600 text-white active:bg-sky-600 font-bold uppercase text-xs w-full px-6 py-3 rounded-xl shadow hover:shadow-lg outline-none focus:outline-none ease-linear transition-all duration-150\" type=\"button\" onClick={handleClose}>Close</button>\r\n                                    {/* <button className=\"bg-emerald-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\" onClick={() => setShowModal(false)}>Save Changes</button> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"opacity-75 fixed inset-0 z-40 bg-black backdrop-blur-xl\"></div>\r\n                </>\r\n            ) : null}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nfunction __rest (s, e) {\r\n    const t = {};\r\n    // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var,no-redeclare,no-plusplus\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\nconst rotate = keyframes `\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nconst StyledSVG = styled.svg `\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke !== null && stroke !== undefined ? stroke : theme.colors.primary};\r\n  }\r\n`;\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function CircleLoader(_a) {\r\n    const { size = '16px', stroke } = _a; const rest = __rest(_a, [\"size\", \"stroke\"]);\r\n    return (React.createElement(StyledSVG, {viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", size, stroke, ...rest},\r\n        React.createElement(\"path\", { d: \"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\", strokeWidth: \"2.5\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\r\n}","import styled from 'styled-components';\r\n\r\nconst Column = styled.div `\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`;\r\nexport const ColumnCenter = styled(Column) `\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\nexport const AutoColumn = styled.div `\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`;\r\nexport default Column;\r\n","import React from 'react';\r\nimport { Text, ErrorIcon } from '@pancakeswap/uikit';\r\nimport styled, { css } from 'styled-components';\r\nimport { AutoColumn } from '../../../components/Layout/Column';\r\n\r\nexport const Wrapper = styled.div `\r\n  position: relative;\r\n  padding: 1rem;\r\n`;\r\nexport const ArrowWrapper = styled.div `\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) => clickable\r\n    ? css `\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n    : null}\r\n`;\r\nexport const ErrorText = styled(Text) `\r\n  color: ${({ theme, severity }) =>\r\n  // eslint-disable-next-line no-nested-ternary  \r\n    severity === 3 || severity === 4\r\n    ? theme.colors?.failure\r\n    // eslint-disable-next-line no-nested-ternary\r\n    : severity === 2\r\n        ? theme.colors?.warning\r\n        : severity === 1\r\n            ? theme.colors?.text\r\n            : theme.colors?.success};\r\n    font-weight: bolder\r\n`;\r\nexport const StyledBalanceMaxMini = styled.button `\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors?.background};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors?.text};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors?.dropdown};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors?.dropdown};\r\n    outline: none;\r\n  }\r\n`;\r\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true }) `\r\n  width: 220px;\r\n`;\r\nconst SwapCallbackErrorInner = styled.div `\r\n  background-color: ${({ theme }) => `${theme.colors?.failure}33`};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors?.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`;\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div `\r\n  background-color: ${({ theme }) => `${theme.colors?.failure}33`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`;\r\nexport function SwapCallbackError({ error }) {\r\n    return (React.createElement(SwapCallbackErrorInner, null,\r\n        React.createElement(SwapCallbackErrorInnerAlertTriangle, null,\r\n            React.createElement(ErrorIcon, { width: \"24px\" })),\r\n        React.createElement(\"p\", null, error)));\r\n}\r\nexport const SwapShowAcceptChanges = styled(AutoColumn) `\r\n  background-color: ${({ theme }) => `${theme.colors?.warning}33`};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`;","import React from 'react'\r\nimport { Price } from '@udegoswap/sdk'\r\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }) {\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const label = showInverted\r\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\r\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\r\n\r\n  return (\r\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n            <i className=\"las la-sync-alt text-black dark:text-white text-lg animate-spin\"></i>\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react';\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nfunction useLast(value, filterFn) {\r\n    const [last, setLast] = useState(filterFn && filterFn(value) ? value : undefined);\r\n    useEffect(() => {\r\n        setLast((prev) => {\r\n            const shouldUse = filterFn ? filterFn(value) : true;\r\n            if (shouldUse)\r\n                return value;\r\n            return prev;\r\n        });\r\n    }, [filterFn, value]);\r\n    return last;\r\n}\r\nfunction isDefined(x) {\r\n    return x !== null && x !== undefined;\r\n}\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nfunction useLastTruthy(value) {\r\n    return useLast(value, isDefined);\r\n}\r\nexport default useLastTruthy;","import React from 'react';\r\nimport { HelpIcon, useTooltip, Box } from '@pancakeswap/uikit';\r\nimport styled from 'styled-components';\r\n\r\nfunction __rest (s, e) {\r\n    let p;\r\n    const t = {};\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        // eslint-disable-next-line no-var,vars-on-top\r\n        var i = 0;\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n        p = Object.getOwnPropertySymbols(s);\r\n        // eslint-disable-next-line no-plusplus\r\n        for (; i < p.length; i++) {\r\n                    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                        t[p[i]] = s[p[i]];\r\n                }\r\n    }\r\n    return t;\r\n};\r\nconst QuestionWrapper = styled.div `\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\nconst QuestionHelper = (_a) => {\r\n    const { text, placement = 'right-end' } = _a; const props = __rest(_a, [\"text\", \"placement\"]);\r\n    const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' });\r\n    return (React.createElement(Box, { ...props},\r\n        tooltipVisible && tooltip,\r\n        React.createElement(QuestionWrapper, { ref: targetRef },\r\n            React.createElement(HelpIcon, { color: \"textSubtle\", width: \"16px\" }))));\r\n};\r\nexport default QuestionHelper;","import styled from 'styled-components';\r\nimport { Box } from '@pancakeswap/uikit';\r\n\r\nconst Row = styled(Box) `\r\n  width: ${({ width }) => width !== null && width !== undefined ? width : '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align !== null && align !== undefined ? align : 'center'};\r\n  justify-content: ${({ justify }) => justify !== null && justify !== undefined ? justify : 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`;\r\nexport const RowBetween = styled(Row) `\r\n  justify-content: space-between;\r\n`;\r\nexport const RowFlat = styled.div `\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\nexport const AutoRow = styled(Row) `\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`;\r\nexport const RowFixed = styled(Row) `\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`;\r\nexport default Row;","import React from 'react'\r\nimport { warningSeverity } from '../../../utils/prices'\r\nimport { ONE_BIPS } from '../../../config/constants/index'\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact } ) {\r\n  return (\r\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\r\n        {/* eslint-disable-next-line no-nested-ternary */}\r\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import React, { Fragment, memo } from 'react'\r\nimport { Trade } from '@udegoswap/sdk'\r\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { unwrappedToken } from '../../../utils/wrappedCurrency'\r\n\r\nexport default memo(({ trade } ) => (\r\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem = i === path.length - 1\r\n        const currency = unwrappedToken(token)\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Fragment key={i}>\r\n            <Flex alignItems=\"end\">\r\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\r\n                {currency.symbol}\r\n              </Text>\r\n            </Flex>\r\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Flex>\r\n  ))\r\n","import React from 'react'\r\nimport {Trade, TradeType} from '@udegoswap/sdk'\r\nimport {Text} from '@pancakeswap/uikit'\r\nimport {Card, CardContent, CardHeader, Grid} from \"@material-ui/core\";\r\nimport {Field} from '../../../state/swap/actions'\r\n\r\nimport {useUserSlippageTolerance} from '../../../state/user/hooks'\r\nimport {computeSlippageAdjustedAmounts, computeTradePriceBreakdown} from '../../../utils/prices'\r\nimport {AutoColumn} from '../../../components/Layout/Column'\r\nimport QuestionHelper from '../../../components/QuestionHelper'\r\nimport {RowBetween, RowFixed} from '../../../components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({trade, allowedSlippage, showRoute}) {\r\n\r\n    const {priceImpactWithoutFee, realizedLPFee} = computeTradePriceBreakdown(trade)\r\n    const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n    const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n    return (\r\n        <div\r\n            className=\"p-6 border-gray-100 dark:border-gray-300 shadow-xl hover:shadow-2xl bg-white bg-opacity-50 dark:bg-opacity-5 rounded-3xl transition-all\">\r\n            <div className=\"flex flex-row items-center justify-between mb-3 border-b border-gray-100 pb-5\">\r\n                <div className=\"flex flex-row items-center\">\r\n                    <h5 className=\"text-xl font-bold text-black dark:text-white items-start\">Swap Details</h5>\r\n                </div>\r\n            </div>\r\n            <div className=\"py-3\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6} md={6}>\r\n                        Min. Received\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                        <b>\r\n                            {isExactIn\r\n                                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                                '-'\r\n                                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\r\n                        </b>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6} md={6}>\r\n                        Price Impact\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                        <b style={{color: 'green'}}>\r\n                            <FormattedPriceImpact priceImpact={priceImpactWithoutFee}/>\r\n                        </b>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6} md={6}>\r\n                        Is Routed?\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                        {\r\n                            !showRoute &&\r\n                            <b style={{color: 'red'}}>\r\n                                False\r\n                            </b>\r\n                        }\r\n                        {\r\n                            showRoute &&\r\n                            <SwapRoute trade={trade}/>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6} md={6}>\r\n                        Liquidity Fee\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                        <b>{realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}</b>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n)\r\n}\r\n\r\nexport function AdvancedSwapDetails({trade}) {\r\n\r\n    const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n    const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                trade && (\r\n                    <>\r\n                        <TradeSummary trade={trade} allowedSlippage={allowedSlippage} showRoute={showRoute}/>\r\n                    </>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useLastTruthy from '../../../hooks/useLast'\r\nimport { AdvancedSwapDetails } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div`\r\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-radius: 20px;\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport {useCallback, useMemo, useState, useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {JSBI, TradeType} from \"@udegoswap/sdk\";\r\nimport { Token} from \"@udegoswap/sdk\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\n\r\nimport {\r\n    useDefaultsFromURLSearch,\r\n    useDerivedSwapInfo,\r\n    useSwapActionHandlers,\r\n    useSwapState\r\n} from \"../../state/swap/hooks\";\r\nimport {useAllTokens, useCurrency} from \"../../hooks/Tokens\";\r\nimport {useExpertModeManager, useUserSingleHopOnly, useUserSlippageTolerance} from \"../../state/user/hooks\";\r\nimport useWrapCallback, {WrapType} from \"../../hooks/useWrapCallback\";\r\nimport { Field } from '../../state/swap/actions'\r\nimport {ApprovalState, useApproveCallbackFromTrade} from \"../../hooks/useApproveCallback\";\r\nimport {useIsTransactionUnsupported} from \"../../hooks/Trades\";\r\nimport {maxAmountSpend} from \"../../utils/maxAmountSpend\";\r\nimport {computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity} from \"../../utils/prices\";\r\nimport confirmPriceImpactWithoutFee from \"./components/confirmPriceImpactWithoutFee\";\r\nimport {useSwapCallback} from \"../../hooks/useSwapCallback\";\r\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\r\n\r\nimport useToast from \"../../hooks/useToast\";\r\nimport ConnectWallet from \"../../components/mtpl/ConnectWallet\";\r\nimport TokenSelect from \"./TokenSelect\";\r\nimport CircleLoader from \"../../components/Loader/CircleLoader\";\r\nimport TradePrice from \"./components/TradePrice\";\r\nimport AdvancedSwapDetailsDropdown from \"./components/AdvancedSwapDetailsDropdown\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nexport default function SwapMTPL () {\r\n\r\n    const { account } = useActiveWeb3React()\r\n    const navigate = useNavigate()\r\n    const loadedURLParams = useDefaultsFromURLSearch()\r\n\r\n    const { toastSuccess } = useToast()\r\n\r\n    const [loadedInputCurrency, loadedOutputCurrency] = [\r\n        useCurrency(loadedURLParams?.inputCurrencyId),\r\n        useCurrency(loadedURLParams?.outputCurrencyId)\r\n    ]\r\n\r\n    const urlLoadedTokens = useMemo(\r\n        () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c) => c instanceof Token) ?? [],\r\n        [loadedInputCurrency, loadedOutputCurrency],\r\n    )\r\n\r\n    const defaultTokens = useAllTokens()\r\n    const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n    const [isExpertMode] = useExpertModeManager()\r\n\r\n    const { independentField, typedValue, recipient } = useSwapState()\r\n    const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n\r\n    const { wrapType, execute: onWrap, inputError: wrapInputError, } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\r\n    const showWrap = wrapType !== WrapType.NOT_APPLICABLE\r\n    const trade = showWrap ? undefined : v2Trade\r\n\r\n    const parsedAmounts = showWrap ? { [Field.INPUT]: parsedAmount, [Field.OUTPUT]: parsedAmount } : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n    }\r\n\r\n    const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n    const isValid = !swapInputError\r\n    const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n    const handleTypeInput = useCallback((value) => {\r\n            onUserInput(Field.INPUT, value)\r\n        },\r\n        [onUserInput]\r\n    )\r\n    const handleTypeOutput = useCallback((value) => {\r\n            onUserInput(Field.OUTPUT, value)\r\n        },\r\n        [onUserInput],\r\n    )\r\n\r\n    const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState({\r\n        tradeToConfirm: undefined,\r\n        attemptingTxn: false,\r\n        swapErrorMessage: undefined,\r\n        txHash: undefined,\r\n    })\r\n\r\n    const formattedAmounts = {\r\n        [independentField]: typedValue,\r\n        [dependentField]: showWrap\r\n          ? parsedAmounts[independentField]?.toExact() ?? ''\r\n          : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n    }\r\n\r\n    const route = trade?.route\r\n    const userHasSpecifiedInputOutput = Boolean(\r\n        currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n    )\r\n    const noRoute = !route\r\n    // check whether the user has approved the router on the input token\r\n    const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n    // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n    const [approvalSubmitted, setApprovalSubmitted] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (approval === ApprovalState.PENDING) {\r\n            setApprovalSubmitted(true);\r\n        }\r\n    }, [approval, approvalSubmitted]);\r\n    const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\r\n    let _f;\r\n    // eslint-disable-next-line no-cond-assign\r\n    const atMaxAmountInput = Boolean(maxAmountInput && ((_f = parsedAmounts[Field.INPUT]) === null || _f === undefined ? undefined : _f.equalTo(maxAmountInput)));\r\n    // the callback to execute the swap\r\n    const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient);\r\n    const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade);\r\n\r\n    const handleSwap = useCallback(() => {\r\n        if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n            return;\r\n        }\r\n        if (!swapCallback) {\r\n            return;\r\n        }\r\n        setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined });\r\n        swapCallback()\r\n            .then((hash) => {\r\n            setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash });\r\n            onUserInput(Field.INPUT, '')\r\n        })\r\n            .catch((error) => {\r\n            setSwapState({\r\n                attemptingTxn: false,\r\n                tradeToConfirm,\r\n                swapErrorMessage: error.message,\r\n                txHash: undefined,\r\n            });\r\n        });\r\n    }, [priceImpactWithoutFee, swapCallback, tradeToConfirm]);\r\n    // errors\r\n    const [showInverted, setShowInverted] = useState(false);\r\n    // warnings on slippage\r\n    const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\r\n    // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n    // never show if price impact is above threshold in non expert mode\r\n    const showApproveFlow = !swapInputError &&\r\n        (approval === ApprovalState.NOT_APPROVED ||\r\n            approval === ApprovalState.PENDING ||\r\n            (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n        !(priceImpactSeverity > 3 && !isExpertMode);\r\n\r\n    const handleInputSelect = useCallback((inputCurrency) => {\r\n        setApprovalSubmitted(false); // reset 2 step UI for approvals\r\n        onCurrencySelection(Field.INPUT, inputCurrency);\r\n    }, [onCurrencySelection]);\r\n    const handleMaxInput = useCallback(() => {\r\n        if (maxAmountInput) {\r\n            onUserInput(Field.INPUT, maxAmountInput.toExact());\r\n        }\r\n    }, [maxAmountInput, onUserInput]);\r\n    const handleOutputSelect = useCallback((outputCurrency) => {\r\n        // console.log(outputCurrency)\r\n        onCurrencySelection(Field.OUTPUT, outputCurrency);\r\n    }, [onCurrencySelection]);\r\n    const swapIsUnsupported = useIsTransactionUnsupported(currencies === null || currencies === undefined ? undefined : currencies.INPUT, currencies === null || currencies === undefined ? undefined : currencies.OUTPUT);\r\n\r\n    const openPool = () => {\r\n        navigate('/pool')\r\n    }\r\n\r\n    const [isDialogOpen, setDialog] = useState(false);\r\n    const selectDialog = () => {\r\n        setDialog(true)\r\n    }\r\n    const handleClose = () => {\r\n        setDialog(false)\r\n    }\r\n\r\n    console.log(currencies[Field.OUTPUT])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"relative col-span-1 md:w-1/2 lg:w-1/3 justify-center mx-auto\">\r\n                <div className=\"p-6 border-gray-100 dark:border-gray-300 shadow-xl hover:shadow-2xl bg-white bg-opacity-50 dark:bg-opacity-5 rounded-3xl transition-all\">\r\n                  <div className=\"flex flex-row items-center justify-between mb-3 border-b border-gray-100 pb-5\">\r\n                    <div className=\"flex flex-row items-center\">\r\n                      <div className=\"chart-icon text-gray-500 dark:text-gray-400 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 text-sm px-3 py-2 border border-gray-300 cursor-pointer mr-2 transition-all\"><i className=\"las la-exchange-alt text-xl\" /></div>\r\n                      <h5 className=\"text-xl font-bold text-black dark:text-white items-start\">Swap</h5>\r\n                    </div>\r\n                    <button type=\"button\" className=\"text-gray-500 dark:text-gray-400 focus:outline-none focus:ring-1 focus:ring-gray-200 dark:focus:ring-gray-200 dark:focus:ring-0 h-5 w-5\" onClick={setDialog}>\r\n                      <i className=\"las la-cog text-2xl text-gray-500 hover:animate-spin hover:text-pink-500\" />\r\n                    </button>\r\n\r\n                    {isDialogOpen ? (\r\n                        <>\r\n                            <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none px-3\">\r\n                                <div className=\"relative w-auto my-6 mx-auto max-w-6xl lg:w-1/4\">\r\n                                    {/*content*/}\r\n                                    <div className=\"border-0 rounded-3xl shadow-lg relative flex flex-col w-full bg-white dark:bg-indigo-900 outline-none focus:outline-none\">\r\n                                        {/*header*/}\r\n                                        <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 dark:border-gray-100 dark:border-opacity-10 rounded-t\">\r\n                                            <h3 className=\"text-lg font-semibold\">Settings</h3>\r\n                                            <button className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-40 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\" onClick={handleClose}>\r\n                                                <span className=\"bg-transparent text-black dark:text-white hover:text-indigo-600 h-6 w-6 text-2xl block outline-none focus:outline-none\">×</span>\r\n                                            </button>\r\n                                        </div>\r\n                                        {/*body*/}\r\n                                        <div className=\"relative p-6 flex-auto\">\r\n                                            <div className=\"overflow-hidden\">\r\n                                                <div className=\"token-list\">\r\n                                                    <h3 className=\"text-md text-white\">Slippage Tolerance</h3>\r\n                                                    <div className=\"button-group fency-checkbox flex items-center space-x-3 mt-4\">\r\n                                                        <div className=\"btn relative\">\r\n                                                            <input type=\"radio\" name=\"tolerance\" className=\"absolute opacity-0\" id=\"01\"></input>\r\n                                                            <label for=\"01\" className=\"px-4 py-2 rounded-full bg-white bg-opacity-5 text-xs font-semibold text-white hover:bg-pink-500 hover:bg-opacity-20 block cursor-pointer tracking-wide focus:bg-opacity-90\">0.1%</label>\r\n                                                        </div>\r\n                                                        <div className=\"btn relative\">\r\n                                                            <input type=\"radio\" name=\"tolerance\" className=\"absolute opacity-0\" id=\"05\"></input>\r\n                                                            <label for=\"05\" className=\"px-4 py-2 rounded-full bg-white bg-opacity-5 text-xs font-semibold text-white hover:bg-pink-500 hover:bg-opacity-20 block cursor-pointer tracking-wide\">0.5%</label>\r\n                                                        </div>\r\n                                                        <div className=\"btn relative\">\r\n                                                            <input type=\"radio\" name=\"tolerance\" className=\"absolute opacity-0\" id=\"10\"></input>\r\n                                                            <label for=\"10\" className=\"px-4 py-2 rounded-full bg-white bg-opacity-5 text-xs font-semibold text-white hover:bg-pink-500 hover:bg-opacity-20 block cursor-pointer tracking-wide\">1.0%</label>\r\n                                                        </div>\r\n                                                        <div className=\"btn relative flex items-center space-x-2\">\r\n                                                            <input type=\"text\" name=\"tolerance\" className=\"w-16 px-4 py-2 rounded-full bg-white bg-opacity-5 text-xs font-semibold text-white hover:bg-pink-500 hover:bg-opacity-20 block cursor-pointer tracking-wide focus:outline-0 focus:ring-0\" id=\"custom\"></input>\r\n                                                            <label for=\"custom\" className=\"text-xs font-semibold text-white\">%</label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/*footer*/}\r\n                                        <div className=\"flex items-center flex-col justify-end px-6 py-4 border-t border-solid border-blueGray-200 dark:border-gray-100 dark:border-opacity-10 rounded-b\">\r\n                                            <button\r\n                                                className=\"bg-indigo-500 hover:bg-sky-600 text-white active:bg-sky-600 font-bold uppercase text-xs w-full px-6 py-3 rounded-xl shadow hover:shadow-lg outline-none focus:outline-none ease-linear transition-all duration-150\" type=\"button\" onClick={handleClose}>Close</button>\r\n                                            {/* <button className=\"bg-emerald-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\" onClick={() => setShowModal(false)}>Save Changes</button> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"opacity-75 fixed inset-0 z-40 bg-black backdrop-blur-xl\"></div>\r\n                        </>\r\n                    ) : null}\r\n\r\n                  </div>\r\n                  <div className=\"py-3\">\r\n                    <TokenSelect\r\n                      placeHolder=\"Input Amount\"\r\n                      label=\"From\"\r\n                      isMax\r\n                      tokenAddress={currencies[Field.INPUT]?.address}\r\n                      tokenSymbol={currencies[Field.INPUT]?.symbol}\r\n                      tokenImg={`./tokens/${currencies[Field.INPUT]?.symbol ?? 'bnb'}.png`}\r\n                      onItemChange={handleInputSelect}\r\n                      onInputChange={handleTypeInput}\r\n                      inputValue={formattedAmounts[Field.INPUT]}\r\n                      selectedToken={currencies[Field.INPUT]}\r\n                      showApprove={showApproveFlow}\r\n                      isDisabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                      onApprove={approveCallback}\r\n                      onMax={handleMaxInput}\r\n                      approveText={(showApproveFlow) &&\r\n                        // eslint-disable-next-line no-nested-ternary\r\n                        (approval === ApprovalState.PENDING ? (\r\n                            <div gap=\"6px\" justify=\"center\">\r\n                              Approving...\r\n                            </div>\r\n                        ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                            'Approved'\r\n                        ) : (\r\n                            `Approve ${currencies[Field.INPUT]?.symbol ?? '' }`\r\n                        ))}\r\n                    />\r\n                  </div>\r\n                  <div className=\"separator flex align-middle justify-center\">\r\n                    <a\r\n                        href=\"javascript:;\"\r\n                        className=\"shadow-2xl p-1\"\r\n                        onClick={() => {\r\n                            // console.log(\"[+] Switch Tokens\")\r\n                            setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                            onSwitchTokens()\r\n                        }}\r\n                    >\r\n                        <i className=\"las la-arrow-down text-blue-900\" />\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"py-3\">\r\n                    <TokenSelect\r\n                      placeHolder=\"Output Amount\"\r\n                      label=\"To (estimated)\"\r\n                      tokenAddress={currencies[Field.OUTPUT]?.address}\r\n                      tokenSymbol={currencies[Field.OUTPUT]?.symbol}\r\n                      tokenImg={`./tokens/${currencies[Field.OUTPUT]?.address}.png`}\r\n                      onItemChange={handleOutputSelect}\r\n                      onInputChange={handleTypeOutput}\r\n                      selectedToken={currencies[Field.OUTPUT]}\r\n                      inputValue={formattedAmounts[Field.OUTPUT]}\r\n                      showApprove={false}\r\n                    />\r\n                  </div>\r\n                    <div className=\"flex flex-row items-center justify-between mt-3 mb-3 border-b border-gray-100 pb-5 text-white text-sm font-semibold\">\r\n                        <TradePrice\r\n                            price={trade?.executionPrice}\r\n                            showInverted={showInverted}\r\n                            setShowInverted={setShowInverted}\r\n                        />\r\n                    </div>\r\n                  {\r\n                    !account &&\r\n                    <ConnectWallet />\r\n                  }\r\n                    {\r\n                        showApproveFlow && (\r\n                        <button\r\n                            className=\"px-2 py-4 mt-4 text-center text-white bg-gradient-to-r from-sky-600 to-blue-700 rounded-lg w-full font-medium hover:from-sky-800 hover:to-blue-900 transition-all\"\r\n                            onClick={approveCallback}\r\n                            disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                        >\r\n                            {\r\n                                (approval === ApprovalState.PENDING ? (\r\n                                <div gap=\"6px\" justify=\"center\">\r\n                                    <CircleLoader stroke=\"white\" />\r\n                                </div>\r\n                                ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                                'Approved'\r\n                                ) : (\r\n                                `Approve ${currencies[Field.INPUT]?.symbol ?? '' }`\r\n                                ))\r\n                            }\r\n                        </button>\r\n                        )\r\n                    }\r\n                    {\r\n                        (account) &&\r\n                        <button\r\n                            className=\"px-2 py-4 mt-4 text-center text-white bg-gradient-to-r from-sky-600 to-blue-700 rounded-lg w-full font-medium hover:from-sky-800 hover:to-blue-900 transition-all\"\r\n                            fullWidth\r\n                            color={isValid && priceImpactSeverity > 2 ? 'error' : 'primary'}\r\n                            sx={{maxWidth: 620, borderRadius: 25}}\r\n                            onClick={() => {\r\n                                handleSwap()\r\n                            }}\r\n                            disabled={\r\n                                !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                            }\r\n                        >\r\n                            {\r\n                                // eslint-disable-next-line no-nested-ternary\r\n                                (\r\n                                    (noRoute && userHasSpecifiedInputOutput) ? (\r\n                                        'Insufficient liquidity for this trade'\r\n                                    ) : (\r\n                                        swapInputError ||\r\n                                        (\r\n                                            // eslint-disable-next-line no-nested-ternary\r\n                                            approval !== ApprovalState.APPROVED ? 'Approve Token' :\r\n                                                priceImpactSeverity > 3 && !isExpertMode\r\n                                                ? 'Price Impact Too High'\r\n                                                : priceImpactSeverity > 2\r\n                                                ? 'Swap Anyway'\r\n                                                : 'Swap'\r\n                                        )\r\n                                    )\r\n                                )\r\n                            }\r\n                        </button>\r\n                    }\r\n                    {swapIsUnsupported && (\r\n                        <button\r\n                            className=\"px-2 py-4 mt-4 text-center text-white bg-gradient-to-r from-indigo-900 to-blue-900 rounded-lg w-full font-medium hover:from-blue-900 hover:to-indigo-900 transition-all\"\r\n                            width=\"100%\"\r\n                            variant=\"contained\"\r\n                            disabled\r\n                            mb=\"4px\"\r\n                        >\r\n                            Unsupported Asset\r\n                        </button>\r\n                    )\r\n                    }\r\n                    {/*<div className=\"flex flex-row items-center justify-between mt-3 mb-3 border-b border-gray-100 pb-5\">*/}\r\n                    {/*    {*/}\r\n                    {/*        (!swapIsUnsupported && trade) && (*/}\r\n                    {/*            <AdvancedSwapDetailsDropdown trade={trade} />*/}\r\n                    {/*        )*/}\r\n                    {/*    }*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <Grid item xs={12} md={12} sx={{display: 'flex', justifyContent:'center', alignItems: 'center'}}>\r\n                    {\r\n                        (!swapIsUnsupported && trade) && (\r\n                            <AdvancedSwapDetailsDropdown trade={trade} />\r\n                        )\r\n                    }\r\n                </Grid>\r\n              </div>\r\n        </>\r\n    )\r\n}","import { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index';\r\n/**\r\n * Given the price impact, get user confirmation.\r\n *\r\n * @param priceImpactWithoutFee price impact of the trade without the fee.\r\n * @param t Translation\r\n */\r\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee) {\r\n    if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\r\n        const confirmWord = 'confirm';\r\n        return (\r\n        // eslint-disable-next-line no-alert\r\n        window.prompt(`This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0)}%. Please confirm ok to continue with this swap.`, {\r\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\r\n            word: confirmWord,\r\n        }) === confirmWord);\r\n    }\r\n    if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\r\n        // eslint-disable-next-line no-alert\r\n        return window.confirm(`This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(0)}%. Please confirm that you would like to continue with this swap.`, {\r\n            amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\r\n        });\r\n    }\r\n    return true;\r\n}\r\n","import { ChainId, currencyEquals, JSBI, Price } from '@udegoswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport tokens, {mainnetTokens, testnetTokens} from '../config/tokens';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { PairState, usePairs } from './usePairs';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\n\r\nconst BUSD_MAINNET = mainnetTokens.busd;\r\nconst BUSD_TESTNET = testnetTokens.busd;\r\nconst { wbnb: WBNB } = tokens;\r\n/**\r\n * Returns the price in BUSD of the input currency\r\n * @param currency currency to compute the BUSD price of\r\n */\r\nexport default function useBUSDPrice(currency) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const wrapped = wrappedCurrency(currency, chainId);\r\n    console.log(wrapped)\r\n    const tokenPairs = useMemo(() => [\r\n        [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\r\n        // eslint-disable-next-line no-void\r\n        [(wrapped === null || wrapped === void 0 ? void 0 : wrapped.equals(BUSD_MAINNET)) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : BUSD_TESTNET],\r\n        [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : BUSD_TESTNET],\r\n    ], [chainId, currency, wrapped]);\r\n    const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs);\r\n    return useMemo(() => {\r\n        if (!currency || !wrapped || !chainId) {\r\n            return undefined;\r\n        }\r\n        // handle weth/eth\r\n        if (wrapped.equals(WBNB)) {\r\n            if (busdPair) {\r\n                const price = busdPair.priceOf(WBNB);\r\n                return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator);\r\n            }\r\n            return undefined;\r\n        }\r\n        // handle busd\r\n        if (wrapped.equals(BUSD_MAINNET)) {\r\n            return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1');\r\n        }\r\n        // eslint-disable-next-line no-void\r\n        const ethPairETHAmount = ethPair === null || ethPair === void 0 ? void 0 : ethPair.reserveOf(WBNB);\r\n        const ethPairETHBUSDValue = ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0);\r\n        // all other tokens\r\n        // first try the busd pair\r\n        if (busdPairState === PairState.EXISTS &&\r\n            busdPair &&\r\n            busdPair.reserveOf(BUSD_TESTNET).greaterThan(ethPairETHBUSDValue)) {\r\n            const price = busdPair.priceOf(wrapped);\r\n            return new Price(currency, BUSD_TESTNET, price.denominator, price.numerator);\r\n        }\r\n        if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\r\n            if (busdEthPair.reserveOf(BUSD_TESTNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\r\n                const ethBusdPrice = busdEthPair.priceOf(BUSD_TESTNET);\r\n                const currencyEthPrice = ethPair.priceOf(WBNB);\r\n                const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert();\r\n                return new Price(currency, BUSD_TESTNET, busdPrice.denominator, busdPrice.numerator);\r\n            }\r\n        }\r\n        return undefined;\r\n    }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped]);\r\n}\r\nexport const useUDEBusdPrice = () => {\r\n    const udeBusdPrice = useBUSDPrice(tokens.mlx);\r\n    return udeBusdPrice;\r\n};\r\nexport const useBNBBusdPrice = () => {\r\n    const bnbBusdPrice = useBUSDPrice(tokens.wbnb);\r\n    return bnbBusdPrice;\r\n};","import React from \"react\";\r\nimport {useTotalSupply} from \"../../hooks/useTokenBalance\";\r\nimport {useUDEBusdPrice} from \"../../hooks/useBUSDPrice\";\r\nimport {getBalanceNumber} from \"../../utils/formatBalance\";\r\nimport {fNumber} from \"../../utils/formatNumber\";\r\n\r\n\r\nexport default function MTPLTVL() {\r\n    const totalSupply = useTotalSupply()\r\n    // const mlxRate = useUDEBusdPrice()\r\n\r\n    const totalMarketCap = parseFloat(\"0.1\") * parseFloat(totalSupply?.toFixed(5))\r\n    let val = getBalanceNumber(totalMarketCap)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-span-1 md:col-span-1\">\r\n                <div className=\"px-6 py-6 bg-white dark:bg-opacity-5 rounded-3xl shadow-2xl dark:shadow-xl hover:shadow-3xl transition-all\">\r\n                    <div className=\"flex flex-col xl:flex-row justify-start items-start xl:space-x-4\">\r\n                        <div className=\"w-full md:w-auto flex items-center md:justify-end mb-3 md:mb-0\">\r\n                            <img className=\"animate-pulse mx-auto h-24\" src=\"https://thecrypto360.com/valuelocked.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"w-full md:w-auto md:pt-6 mb-3 md:mb-0\">\r\n                            <h3 className=\"mb-2 text-2xl font-bold text-white text-center md:text-left whitespace-pre\">\r\n                                <span className=\"dark:text-white text-red-700 whitespace-pre\">\r\n                                    {\r\n                                        `$ ${fNumber(val)}`\r\n                                    }\r\n                                </span>\r\n                            </h3>\r\n                            <p className=\"mb-0 text-sm font-medium text-black dark:text-indigo-100 text-center md:text-left\">Total Market Cap</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport BigNumber from 'bignumber.js';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport {ChainId} from \"@udegoswap/sdk\";\r\nimport { getBep20Contract, getUDEContract } from '../utils/contractHelpers';\r\nimport { BIG_ZERO } from '../utils/bigNumber';\r\nimport { simpleRpcProvider } from '../utils/providers';\r\nimport tokens from \"../config/tokens\";\r\nimport useRefresh from './useRefresh';\r\nimport useLastUpdated from './useLastUpdated';\r\nimport {useUDEBusdPrice} from \"./useBUSDPrice\";\r\nimport {useUDE} from \"./useContract\";\r\nimport {farmsConfig} from \"../config/constants/index\";\r\nimport {FARMING} from \"../config/constants\";\r\nimport {formatBigNumberToFixed} from \"../utils/formatBalance\";\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport {getContract, getLPPrice} from \"../config/helpers\";\r\n\r\n// eslint-disable-next-line import/no-mutable-exports,no-var\r\nexport const FetchStatus = {\r\n    NOT_FETCHED: \"not-fetched\",\r\n    SUCCESS: \"success\",\r\n    FAILED: \"failed\"\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress) => {\r\n    const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus;\r\n    const [balanceState, setBalanceState] = useState({\r\n        balance: BIG_ZERO,\r\n        fetchStatus: NOT_FETCHED,\r\n    });\r\n    const { account } = useWeb3React();\r\n    const { fastRefresh } = useRefresh();\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            const contract = getBep20Contract(tokenAddress);\r\n            try {\r\n                const res = await contract.balanceOf(account);\r\n                setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS });\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                setBalanceState((prev) => ({...prev, fetchStatus: FAILED}));\r\n            }\r\n        };\r\n        if (account) {\r\n            fetchBalance();\r\n        }\r\n    }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED]);\r\n    return balanceState;\r\n};\r\nexport const useTotalSupply = () => {\r\n    const { slowRefresh } = useRefresh();\r\n    const [totalSupply, setTotalSupply] = useState();\r\n    useEffect(() => {\r\n        async function fetchTotalSupply() {\r\n            const udeContract = getUDEContract();\r\n            const supply = await udeContract.totalSupply();\r\n            setTotalSupply(new BigNumber(supply.toString()));\r\n        }\r\n        fetchTotalSupply();\r\n    }, [slowRefresh]);\r\n    return totalSupply;\r\n};\r\nexport const useBurnedBalance = (tokenAddress) => {\r\n    const [balance, setBalance] = useState(BIG_ZERO);\r\n    const { slowRefresh } = useRefresh();\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            const contract = getBep20Contract(tokenAddress);\r\n            const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD');\r\n            setBalance(new BigNumber(res.toString()));\r\n        };\r\n        fetchBalance();\r\n    }, [tokenAddress, slowRefresh]);\r\n    return balance;\r\n};\r\nexport const useGetBnbBalance = () => {\r\n    const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED);\r\n    const [balance, setBalance] = useState(ethers.BigNumber.from(0));\r\n    const { account } = useWeb3React();\r\n    const { lastUpdated, setLastUpdated } = useLastUpdated();\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            try {\r\n                const walletBalance = await simpleRpcProvider.getBalance(account);\r\n                setBalance(walletBalance);\r\n                setFetchStatus(FetchStatus.SUCCESS);\r\n            }\r\n            catch (_a) {\r\n                setFetchStatus(FetchStatus.FAILED);\r\n            }\r\n        };\r\n        if (account) {\r\n            fetchBalance();\r\n        }\r\n    }, [account, lastUpdated, setBalance, setFetchStatus]);\r\n    return { balance, fetchStatus, refresh: setLastUpdated };\r\n};\r\nexport const useGetUdeBalance = () => {\r\n    const { balance, fetchStatus } = useTokenBalance(tokens.mlx.address);\r\n    // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\r\n    return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus };\r\n};\r\n\r\nexport const useLockedLiquidity = (liquid=0) => {\r\n    const {library} = useActiveWeb3React()\r\n    const udePrice = useUDEBusdPrice()\r\n    const ude = useUDE()\r\n    const [liquidity, setLiquidity] = useState(0)\r\n    useEffect(() => {\r\n        const getLiquidity = async () => {\r\n            try{\r\n                const balance = await ude.balanceOf(FARMING)\r\n                const totalStaked = parseFloat(udePrice?.toFixed(8)) * formatBigNumberToFixed(balance)\r\n                liquid += (liquidity+totalStaked)\r\n                setLiquidity(liquid)\r\n            }catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        getLiquidity()\r\n    }, [ude, udePrice, setLiquidity])\r\n    return liquidity\r\n}\r\n\r\nexport default useTokenBalance;","import React, {useEffect} from \"react\";\r\n// importing Link from react-router-dom to navigate to\r\n// different end points.\r\nimport { Link } from \"react-router-dom\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\r\nimport {Helmet} from \"react-helmet\";\r\nimport ConnectWallet from \"../components/mtpl/ConnectWallet\";\r\nimport useActiveWeb3React from \"../hooks/useWeb3\";\r\nimport SwapMTPL from \"./swap-mtpl\";\r\nimport {useTotalSupply} from \"../hooks/useTokenBalance\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getTotalSupply} from \"../redux/slices/ude\";\r\nimport {useUDE} from \"../hooks/useContract\";\r\nimport {fBigNumber, fNumber} from \"../utils/formatNumber\";\r\nimport {shortAddress} from \"../utils/pageHelpers\";\r\nimport MTPLProfile from \"./MTPLProfile\";\r\nimport MTPLTVL from \"./home-mtpl/MTPLTVL\";\r\n\r\n\r\nconst MTPLHome = () => {\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [fromSelectModal, setfromSelectModal] = React.useState(false);\r\n  const { account } = useActiveWeb3React()\r\n  const mlx = useUDE()\r\n\r\n  const totalSupply = useSelector((state) => state.ude.totalSupply);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTotalSupply(mlx))\r\n  }, [dispatch, mlx])\r\n\r\n  return (\r\n    <>\r\n    {/* <Sidebar/> */}\r\n    <div className='mx-auto lg:ml-64'>\r\n        <div className='hero-section px-5 py-4 md:px-10 md:py-8 h-full relative'>\r\n          <nav className=\"flex justify-between mb-4\">\r\n            <h2 className=\"title text-black dark:text-white text-opacity-75 text-3xl font-bold\">Exchange</h2>\r\n            {\r\n              !account && <ConnectWallet />\r\n            }\r\n            {\r\n              account &&\r\n              <MTPLProfile />\r\n            }\r\n          </nav>\r\n          <div className=\"w-full\">\r\n            <section className>\r\n              <div className=\"mx-auto\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-5 md:gap-8 mb-8\">\r\n                  <MTPLTVL />\r\n                  <div className=\"col-span-1 md:col-span-1\">\r\n                    <div className=\"px-6 py-6 bg-white dark:bg-opacity-5 rounded-3xl shadow-2xl dark:shadow-xl hover:shadow-3xl transition-all\">\r\n                      <div className=\"flex flex-col xl:flex-row justify-start items-start xl:space-x-4\">\r\n                        <div className=\"w-full md:w-auto flex items-center md:justify-end mb-3 md:mb-0\">\r\n                          <img className=\"animate-pulse mx-auto h-24\" src=\"images/emission.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"w-full md:w-auto md:pt-6 mb-3 md:mb-0\">\r\n                          <h3 className=\"mb-2 text-2xl font-bold text-white text-center md:text-left whitespace-pre\">\r\n                            <span className=\"dark:text-white text-orange-700 whitespace-pre\">1 MLX</span>\r\n                          </h3>\r\n                          <p className=\"mb-0 text-sm font-medium text-black dark:text-indigo-100 text-center md:text-left\">Emission Per Block</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-span-1 md:col-span-1\">\r\n                    <div className=\"px-6 py-6 bg-white dark:bg-opacity-5 rounded-3xl shadow-2xl dark:shadow-xl hover:shadow-3xl transition-all\">\r\n                      <div className=\"flex flex-col xl:flex-row justify-start items-start xl:space-x-4\">\r\n                        <div className=\"w-full md:w-auto flex items-center md:justify-end mb-3 md:mb-0\">\r\n                          <img className=\"animate-pulse mx-auto h-24\" src=\"images/supply.png\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"w-full md:w-auto md:pt-6 mb-3 md:mb-0\">\r\n                          <h3 className=\"mb-2 text-2xl font-bold text-white text-center md:text-left whitespace-pre\">\r\n                            <span className=\"dark:text-white text-green-700 whitespace-pre\">\r\n                              {fNumber(fBigNumber(totalSupply))} MLX\r\n                            </span>\r\n                          </h3>\r\n                          <p className=\"mb-0 text-sm font-medium text-black dark:text-indigo-100 text-center md:text-left\">Total Supply</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"seed-sale-section py-10 flex flex-col items-center justify-between space-y-4 mb-5 hidden\">\r\n                <h3 className=\"text-2xl md:text-4xl text-white\">Seed Sale is Live Now!</h3>\r\n                <a href=\"https://seed.metaple.finance/\" className=\"px-5 py-3 inline-block text-sm text-center text-white bg-gradient-to-r from-sky-700 to-blue-700 rounded-lg font-medium hover:from-pink-500 hover:to-pink-600 transition-all duration-700\" target=\"_blank\">Byu Now</a>\r\n            </section>\r\n\r\n            {/* Old Class : grid grid-cols-1 md:grid-cols-10 gap-8 */}\r\n            <div className=\"w-full flex items-center justify-center md:justify-center\">\r\n              <div className=\"chart-box col-span-1 md:col-span-6 hidden\">\r\n                <div className=\"border border-gray-200 bg-white bg-opacity-5 w-100 h-full rounded-3xl\">\r\n                  <div className=\"overflow-hidden rounded-3xl\">\r\n                    {/* <TradingViewWidget\r\n                      symbol=\"USDT:BNB\"\r\n                      theme={Themes.DARK}\r\n                      locale=\"fr\"\r\n                    /> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <SwapMTPL />\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MTPLHome;\r\n","import React, { useRef, useState } from 'react';\r\n// material\r\nimport {\r\n    Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText, DialogActions, Dialog,\r\n    List, ListItem, ListItemAvatar, Avatar, ListItemText,\r\n    Typography, Grid, TextField, IconButton\r\n} from '@material-ui/core';\r\nimport {useWeb3React} from \"@web3-react/core\";\r\n// import {QRCode} from \"react-qrcode-logo\";\r\n// import {\r\n//     CheckCircleRounded,\r\n//     CloseOutlined,\r\n//     OpenInNewRounded,\r\n//     QrCodeScannerRounded,\r\n// } from \"@material-ui/icons\";\r\n\r\nimport useConnect from \"../hooks/useConnect\";\r\nimport {shortAddress} from \"../utils/pageHelpers\";\r\nimport {appConstants, EXPLORER} from \"../config/constants\";\r\nimport {ALL_TOKENS} from \"../contexts/TokenList\";\r\n\r\nexport default function MTPLProfile() {\r\n    const anchorRef = useRef(null);\r\n    const { account } = useWeb3React()\r\n    const { logout } = useConnect()\r\n    const [openScan, setScan] = useState(false);\r\n    const [recipentAddress, setRecipent] = useState(\"\");\r\n    const [scanError, setScanError] = useState(null);\r\n    // const navigate = useNavigate();\r\n    // const { enqueueSnackbar } = useSnackbar();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleScan = (data) => {\r\n        console.log(data)\r\n        setScanError(null)\r\n        if(data){\r\n            setRecipent(data.text)\r\n            toggleScan()\r\n        }\r\n    }\r\n    const handleError = (err) => {\r\n        setScanError(err.toString())\r\n        console.log(err)\r\n    }\r\n\r\n    const toggleScan = () => {\r\n        setScan(!openScan)\r\n    }\r\n\r\n    const checkLoad = (val) => {\r\n        console.log(val)\r\n    }\r\n\r\n    const inputRecipent = (val) => {\r\n        setRecipent(val.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/*<Button*/}\r\n            {/*    */}\r\n            {/*    variant=\"contained\"*/}\r\n            {/*    sx={{*/}\r\n            {/*        padding: 1,*/}\r\n            {/*        height: 44,*/}\r\n            {/*        borderRadius: '25px'*/}\r\n            {/*    }}*/}\r\n            {/*>*/}\r\n            {/*    {shortAddress(account)}*/}\r\n            {/*</Button>*/}\r\n\r\n            <button\r\n                onClick={handleClickOpen}\r\n                className=\"px-4 py-3 text-sm text-center text-white bg-gradient-to-r from-sky-600 to-blue-900 rounded-lg font-medium hover:from-sky-800 hover:to-indigo-800 transition-all disabled:bg-opacity-50\"\r\n            >\r\n              <span>\r\n                  {\r\n                      shortAddress(account)\r\n                  }\r\n              </span>\r\n            </button>\r\n\r\n            <Dialog open={open} maxWidth='md' onClose={handleClose}>\r\n                <DialogTitle>\r\n                    <a href={`${EXPLORER}address/${account}/`} target=\"_blank\" rel=\"noreferrer\">{shortAddress(account)} <i className={\"las la-external-link\"} /></a>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {/*<DialogContentText>*/}\r\n                    {/*    <b>Explore Metaple Profile!</b><br />View recent transactions, Quick tools for UDE Tokens, and many more.. </DialogContentText>*/}\r\n                    {/*<Grid container spacing={2} sx={{textAlign:'center'}}>*/}\r\n                    {/*    /!*<Grid item xs={12} lg={12} md={12}>*!/*/}\r\n                    {/*    /!*    <h2>Receive UDE (or Any Token)</h2>*!/*/}\r\n                    {/*    /!*    <QRCode size={240} logoImage={`/tokens/${appConstants.symbol.toLowerCase()}.png`} value={account} />*!/*/}\r\n                    {/*    /!*</Grid>*!/*/}\r\n                    {/*    /!* <Grid item xs={12} lg={6} md={6} sx={{display: 'flex', alignItems:'center'}}> *!/*/}\r\n                    {/*    /!*    <div> *!/*/}\r\n                    {/*    /!*        <h2>Send UDE</h2> *!/*/}\r\n                    {/*    /!*        <Grid container spacing={1}> *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                { *!/*/}\r\n                    {/*    /!*                    openScan && <QrReader *!/*/}\r\n                    {/*    /!*                        onLoad={checkLoad} *!/*/}\r\n                    {/*    /!*                        facingMode='back' *!/*/}\r\n                    {/*    /!*                        delay={500} *!/*/}\r\n                    {/*    /!*                        style={{ *!/*/}\r\n                    {/*    /!*                            height: 240, *!/*/}\r\n                    {/*    /!*                            width: 320, *!/*/}\r\n                    {/*    /!*                        }} *!/*/}\r\n                    {/*    /!*                        onError={handleError} *!/*/}\r\n                    {/*    /!*                        onScan={handleScan} *!/*/}\r\n                    {/*    /!*                    /> *!/*/}\r\n                    {/*    /!*                } *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*            { *!/*/}\r\n                    {/*    /!*                (openScan && scanError) && *!/*/}\r\n                    {/*    /!*                <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                    {scanError} *!/*/}\r\n                    {/*    /!*                </Grid> *!/*/}\r\n                    {/*    /!*            } *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                { *!/*/}\r\n                    {/*    /!*                    !openScan && <Button variant=\"contained\" onClick={toggleScan}> *!/*/}\r\n                    {/*    /!*                        Scan <QrCodeScannerRounded /> *!/*/}\r\n                    {/*    /!*                    </Button> *!/*/}\r\n                    {/*    /!*                } *!/*/}\r\n\r\n                    {/*    /!*                { *!/*/}\r\n                    {/*    /!*                    openScan && <Button variant=\"contained\" onClick={toggleScan} color=\"error\"> *!/*/}\r\n                    {/*    /!*                        Close <CloseOutlined /> *!/*/}\r\n                    {/*    /!*                    </Button> *!/*/}\r\n                    {/*    /!*                } *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                <TextField value={recipentAddress} onChange={inputRecipent} type=\"text\" fullWidth variant=\"filled\" label={`Enter ${appConstants.symbol} Address`} placeholder=\"Receiver Address\" title={`Enter ${appConstants.symbol} Address`} /> *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                <TextField type=\"number\" fullWidth variant=\"filled\" label={`Enter ${appConstants.symbol} Amount`} placeholder={`${appConstants.symbol} Amount to send`} title={`Enter ${appConstants.symbol} Amount`} /> *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                <Button variant=\"outlined\" fullWidth> *!/*/}\r\n                    {/*    /!*                    Quick Send *!/*/}\r\n                    {/*    /!*                </Button> *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*        </Grid> *!/*/}\r\n                    {/*    /!*    </div> *!/*/}\r\n                    {/*    /!* </Grid> *!/*/}\r\n                    {/*</Grid>*/}\r\n                    <div>\r\n                        {/* <Grid container> */}\r\n                        {/* <Grid item xs={12} lg={6} md={6}> */}\r\n                        {/*    <h4>Your Balances</h4> */}\r\n                        {/*    <List> */}\r\n                        {/*        <ListItem */}\r\n                        {/*            button */}\r\n                        {/*            secondaryAction={ */}\r\n                        {/*                <Typography> */}\r\n                        {/*                    0 */}\r\n                        {/*                </Typography> */}\r\n                        {/*            } */}\r\n                        {/*        > */}\r\n                        {/*            <ListItemAvatar> */}\r\n                        {/*                <Avatar src=\"/tokens/bnb.png\" /> */}\r\n                        {/*            </ListItemAvatar> */}\r\n                        {/*            <ListItemText */}\r\n                        {/*                primary=\"BNB Balance\" */}\r\n                        {/*                secondary=\"BNB Balance in your wallet\" */}\r\n                        {/*            /> */}\r\n                        {/*        </ListItem> */}\r\n                        {/*        <ListItem */}\r\n                        {/*            button */}\r\n                        {/*            secondaryAction={ */}\r\n                        {/*                <Typography> */}\r\n                        {/*                    0 */}\r\n                        {/*                </Typography> */}\r\n                        {/*            } */}\r\n                        {/*        > */}\r\n                        {/*            <ListItemAvatar> */}\r\n                        {/*                <Avatar src=\"/tokens/ude.png\" /> */}\r\n                        {/*            </ListItemAvatar> */}\r\n                        {/*            <ListItemText */}\r\n                        {/*                primary={`${appConstants.symbol} Balance`} */}\r\n                        {/*                secondary={`${appConstants.symbol} Balance in your wallet`} */}\r\n                        {/*            /> */}\r\n                        {/*        </ListItem> */}\r\n                        {/*    </List> */}\r\n                        {/* </Grid> */}\r\n                        {/*    <Grid item xs={12} lg={6} md={6}> */}\r\n                        {/*        <h4>UDE LP Balances</h4> */}\r\n                        {/*        <List> */}\r\n                        {/*            <ListItem */}\r\n                        {/*                button */}\r\n                        {/*                secondaryAction={ */}\r\n                        {/*                    <Typography> */}\r\n                        {/*                        0 */}\r\n                        {/*                    </Typography> */}\r\n                        {/*                } */}\r\n                        {/*            > */}\r\n                        {/*                <ListItemAvatar> */}\r\n                        {/*                    <div style={{display: 'flex'}}> */}\r\n                        {/*                        <Avatar src=\"/tokens/bnb.png\" /> */}\r\n                        {/*                        <Avatar src={`/tokens/${appConstants.symbol.toLowerCase()}.png`} sx={{marginLeft: '-20px', backgroundColor: 'white'}} /> */}\r\n                        {/*                    </div> */}\r\n                        {/*                </ListItemAvatar> */}\r\n                        {/*                <ListItemText */}\r\n                        {/*                    primary={`${appConstants.symbol.toUpperCase()}/BNB LP Balance`} */}\r\n                        {/*                    secondary=\"Liquidity Pool Tokens\" */}\r\n                        {/*                /> */}\r\n                        {/*            </ListItem> */}\r\n                        {/*            <ListItem */}\r\n                        {/*                button */}\r\n                        {/*                secondaryAction={ */}\r\n                        {/*                    <Typography> */}\r\n                        {/*                        0 */}\r\n                        {/*                    </Typography> */}\r\n                        {/*                } */}\r\n                        {/*            > */}\r\n                        {/*                <ListItemAvatar> */}\r\n                        {/*                    <div style={{display: 'flex'}}> */}\r\n                        {/*                        <Avatar src={`/tokens/${ALL_TOKENS.busd}.png`} /> */}\r\n                        {/*                        <Avatar src={`/tokens/${appConstants.symbol.toLowerCase()}.png`} sx={{marginLeft: '-20px', backgroundColor: 'white'}} /> */}\r\n                        {/*                    </div> */}\r\n                        {/*                </ListItemAvatar> */}\r\n                        {/*                <ListItemText */}\r\n                        {/*                    primary={`${appConstants.symbol.toUpperCase()}/BUSD LP Balance`} */}\r\n                        {/*                    secondary=\"Liquidity Pool Tokens\" */}\r\n                        {/*                /> */}\r\n                        {/*            </ListItem> */}\r\n                        {/*            <ListItem */}\r\n                        {/*                button */}\r\n                        {/*                secondaryAction={ */}\r\n                        {/*                    <Typography> */}\r\n                        {/*                        0 */}\r\n                        {/*                    </Typography> */}\r\n                        {/*                } */}\r\n                        {/*            > */}\r\n                        {/*                <ListItemAvatar> */}\r\n                        {/*                    <div style={{display: 'flex'}}> */}\r\n                        {/*                        <Avatar src={`/tokens/${ALL_TOKENS.cake}.png`} /> */}\r\n                        {/*                        <Avatar src={`/tokens/${appConstants.symbol.toLowerCase()}.png`} sx={{marginLeft: '-20px', backgroundColor: 'white'}} /> */}\r\n                        {/*                    </div> */}\r\n                        {/*                </ListItemAvatar> */}\r\n                        {/*                <ListItemText */}\r\n                        {/*                    primary={`${appConstants.symbol.toUpperCase()}/CAKE LP Balance`} */}\r\n                        {/*                    secondary=\"Liquidity Pool Tokens\" */}\r\n                        {/*                /> */}\r\n                        {/*            </ListItem> */}\r\n                        {/*        </List> */}\r\n                        {/*    </Grid> */}\r\n                        {/* </Grid> */}\r\n                        {/* <hr /> */}\r\n                        {/* <h2>Recent Transactions</h2> */}\r\n\r\n                        {/* <List> */}\r\n                        {/*    <ListItem */}\r\n                        {/*        secondaryAction={ */}\r\n                        {/*            <IconButton> */}\r\n                        {/*                <OpenInNewRounded /> */}\r\n                        {/*            </IconButton> */}\r\n                        {/*        } */}\r\n                        {/*    > */}\r\n                        {/*        <ListItemAvatar> */}\r\n                        {/*            <CheckCircleRounded color=\"success\" /> */}\r\n                        {/*        </ListItemAvatar> */}\r\n                        {/*        <ListItemText */}\r\n                        {/*            primary=\"SWAP\" */}\r\n                        {/*            secondary=\"Swapped 0.1 BNB For 100 UDE\" */}\r\n                        {/*        /> */}\r\n                        {/*    </ListItem> */}\r\n\r\n                        {/*    <ListItem */}\r\n                        {/*        secondaryAction={ */}\r\n                        {/*            <IconButton> */}\r\n                        {/*                <OpenInNewRounded /> */}\r\n                        {/*            </IconButton> */}\r\n                        {/*        } */}\r\n                        {/*    > */}\r\n                        {/*        <ListItemAvatar> */}\r\n                        {/*            <CheckCircleRounded color=\"success\" /> */}\r\n                        {/*        </ListItemAvatar> */}\r\n                        {/*        <ListItemText */}\r\n                        {/*            primary=\"POOL\" */}\r\n                        {/*            secondary=\"Added 0.1 BNB and 100 UDE\" */}\r\n                        {/*        /> */}\r\n                        {/*    </ListItem> */}\r\n\r\n                        {/*    <ListItem */}\r\n                        {/*        secondaryAction={ */}\r\n                        {/*            <IconButton> */}\r\n                        {/*                <OpenInNewRounded /> */}\r\n                        {/*            </IconButton> */}\r\n                        {/*        } */}\r\n                        {/*    > */}\r\n                        {/*        <ListItemAvatar> */}\r\n                        {/*            <CheckCircleRounded color=\"success\" /> */}\r\n                        {/*        </ListItemAvatar> */}\r\n                        {/*        <ListItemText */}\r\n                        {/*            primary=\"FARMING\" */}\r\n                        {/*            secondary=\"Harvested 12.32 UDE from Farming\" */}\r\n                        {/*        /> */}\r\n                        {/*    </ListItem> */}\r\n\r\n                        {/*    <ListItem */}\r\n                        {/*        secondaryAction={ */}\r\n                        {/*            <IconButton> */}\r\n                        {/*                <OpenInNewRounded /> */}\r\n                        {/*            </IconButton> */}\r\n                        {/*        } */}\r\n                        {/*    > */}\r\n                        {/*        <ListItemAvatar> */}\r\n                        {/*            <CheckCircleRounded color=\"success\" /> */}\r\n                        {/*        </ListItemAvatar> */}\r\n                        {/*        <ListItemText */}\r\n                        {/*            primary=\"STAKING\" */}\r\n                        {/*            secondary=\"Staked 2423.32 UDE in UDE Pool\" */}\r\n                        {/*        /> */}\r\n                        {/*    </ListItem> */}\r\n                        {/* </List> */}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button\r\n                        onClick={logout}\r\n                        color=\"error\"\r\n                        variant=\"contained\"\r\n                        className=\"px-4 py-3 text-sm text-center text-white bg-red-500 from-sky-600 to-blue-900 rounded-lg font-medium hover:from-sky-800 hover:to-indigo-800 transition-all disabled:bg-opacity-50\"\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                    <button\r\n                        onClick={handleClose}\r\n                        variant=\"contained\"\r\n                        className=\"px-4 py-3 text-sm text-center text-white bg-gradient-to-r from-sky-600 to-blue-900 rounded-lg font-medium hover:from-sky-800 hover:to-indigo-800 transition-all disabled:bg-opacity-50\"\r\n                    >\r\n                        Close\r\n                    </button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import { replace } from 'lodash';\r\nimport numeral from 'numeral';\r\nimport {ethers} from \"ethers\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fCurrency(number) {\r\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  return numeral(number / 100).format('0.0%');\r\n}\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  return replace(numeral(number).format('0.00a'), '.00', '');\r\n}\r\n\r\nexport function fData(number) {\r\n  return numeral(number).format('0.0 b');\r\n}\r\n\r\nexport function fBigNumber(number, decimals=18) {\r\n  return ethers.utils.formatUnits(number, decimals)\r\n}\r\n"],"names":["WrapType","NOT_APPLICABLE","WRAP","UNWRAP","wrapType","address","startLength","endLength","substring","length","SwapCallbackState","useSwapCallArguments","trade","allowedSlippage","INITIAL_ALLOWED_SLIPPAGE","recipientAddressOrName","useActiveWeb3React","account","chainId","library","useENS","recipientAddress","recipient","deadline","useTransactionDeadline","useMemo","contract","getRouterContract","swapMethods","push","Router","feeOnTransfer","Percent","JSBI","BIPS_BASE","toNumber","tradeType","TradeType","map","parameters","ListToken","currency","item","selectedToken","tokenSelected","currencyBalance","useCurrencyBalance","undefined","href","onClick","disabled","toLowerCase","className","src","tokenImg","width","alt","name","symbol","toSignificant","inputRegex","RegExp","TokenSelect","tokenSymbol","isMax","tokenAddress","label","placeHolder","inputValue","onInputChange","onItemChange","showApprove","onApprove","approveText","onMax","isDisabled","useState","setSymbol","setToken","setAddress","isDialogOpen","setDialog","dispatch","useDispatch","tokens","useSelector","state","useEffect","getTokens","handleClose","selectedCurrencyBalance","CurrencyLogo","slice","inputMode","maxLength","pattern","tabIndex","defaultValue","type","fullWidth","value","variant","placeholder","title","onInput","event","nextUserInput","target","replace","test","escapeRegExp","loading","tokenItem","rotate","keyframes","StyledSVG","styled","size","stroke","theme","colors","primary","CircleLoader","_a","rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","React","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","Column","AutoColumn","gap","justify","ErrorText","clickable","css","Text","severity","failure","warning","text","success","StyledBalanceMaxMini","background","dropdown","attrs","ellipsis","TradePrice","price","showInverted","setShowInverted","formattedPrice","invert","show","Boolean","baseCurrency","quoteCurrency","style","justifyContent","alignItems","display","isDefined","x","filterFn","last","setLast","prev","useLast","Row","Box","align","padding","border","borderRadius","FormattedPriceImpact","priceImpact","fontSize","warningSeverity","lessThan","ONE_BIPS","toFixed","memo","flexWrap","route","path","token","isLastItem","unwrappedToken","Fragment","ml","mr","TradeSummary","showRoute","computeTradePriceBreakdown","priceImpactWithoutFee","realizedLPFee","isExactIn","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","Grid","container","spacing","xs","md","Field","outputAmount","inputAmount","color","SwapRoute","AdvancedSwapDetails","useUserSlippageTolerance","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","useLastTruthy","SwapMTPL","loadedURLParams","useNavigate","useDefaultsFromURLSearch","useToast","toastSuccess","useCurrency","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","filter","c","Token","useAllTokens","useExpertModeManager","isExpertMode","useSwapState","independentField","typedValue","useDerivedSwapInfo","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","inputCurrency","outputCurrency","callWithGasPrice","useCallWithGasPrice","wethContract","useWETHContract","balance","tryParseAmount","addTransaction","useTransactionAdder","sufficientBalance","ETHER","currencyEquals","WETH","execute","raw","toString","txReceipt","summary","console","error","useWrapCallback","showWrap","parsedAmounts","useSwapActionHandlers","onSwitchTokens","onCurrencySelection","onUserInput","isValid","onChangeRecipient","dependentField","handleTypeInput","useCallback","handleTypeOutput","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","userHasSpecifiedInputOutput","greaterThan","noRoute","useApproveCallbackFromTrade","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","ApprovalState","_f","maxAmountInput","maxAmountSpend","equalTo","gasPrice","useGasPrice","swapCalls","callback","Promise","all","methodName","args","options","isZero","estimateGas","then","gasEstimate","catch","gasError","callStatic","result","Error","callError","reason","data","message","errorMessage","estimatedCalls","successfulEstimation","find","el","ix","list","errorCalls","gasLimit","calculateGasMargin","from","response","inputSymbol","outputSymbol","base","withRecipient","isAddress","truncateHash","showPromise","wait","hash","code","showError","useSwapCallback","swapCallback","handleSwap","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","confirmWord","window","prompt","amount","word","ALLOWED_PRICE_IMPACT_HIGH","confirm","confirmPriceImpactWithoutFee","priceImpactSeverity","showApproveFlow","handleInputSelect","handleMaxInput","handleOutputSelect","swapIsUnsupported","useIsTransactionUnsupported","INPUT","OUTPUT","log","id","for","executionPrice","ConnectWallet","sx","maxWidth","mb","mainnetTokens","testnetTokens","MTPLTVL","totalSupply","slowRefresh","useRefresh","setTotalSupply","udeContract","getUDEContract","supply","BigNumber","fetchTotalSupply","useTotalSupply","totalMarketCap","parseFloat","val","getBalanceNumber","fNumber","mlx","useUDE","ude","getTotalSupply","MTPLProfile","fBigNumber","useRef","useWeb3React","logout","useConnect","open","setOpen","shortAddress","onClose","EXPLORER","rel","fCurrency","number","numeral","format","Number","isInteger","decimals","ethers"],"sourceRoot":""}