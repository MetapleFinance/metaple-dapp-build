{"version":3,"file":"static/js/542.176f807b.chunk.js","mappings":"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","sources":["contexts/SettingsContext.js","hooks/useSettings.js","pages/farm-mtpl/FarmCard.js","pages/MTPLFarming.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { createContext } from 'react';\n// hooks\nimport useLocalStorage from '../hooks/useLocalStorage';\n// theme\n// import palette from '../theme/palette';\n\n// ----------------------------------------------------------------------\n\nconst PRIMARY_COLOR = [\n  // DEFAULT\n  {\n    name: 'default',\n    lighter: '#EBD6FD',\n    light: '#B985F4',\n    main: '#7635dc',\n    dark: '#431A9E',\n    darker: '#200A69',\n    contrastText: '#fff'\n  },\n  // GREEN\n  {\n    name: 'green',\n  },\n  // CYAN\n  {\n    name: 'cyan',\n    lighter: '#D1FFFC',\n    light: '#76F2FF',\n    main: '#1CCAFF',\n    dark: '#0E77B7',\n    darker: '#053D7A',\n  },\n  // BLUE\n  {\n    name: 'blue',\n    lighter: '#CCDFFF',\n    light: '#6697FF',\n    main: '#0045FF',\n    dark: '#0027B7',\n    darker: '#00137A',\n    contrastText: '#fff'\n  },\n  // ORANGE\n  {\n    name: 'orange',\n    lighter: '#FEF4D4',\n    light: '#FED680',\n    main: '#fda92d',\n    dark: '#B66816',\n    darker: '#793908',\n  },\n  // RED\n  {\n    name: 'red',\n    lighter: '#FFE3D5',\n    light: '#FFC1AC',\n    main: '#FF3030',\n    dark: '#B71833',\n    darker: '#7A0930',\n    contrastText: '#fff'\n  }\n];\n\nSetColor.propTypes = {\n  themeColor: PropTypes.oneOf(['default', 'purple', 'cyan', 'blue', 'orange', 'red'])\n};\n\nfunction SetColor(themeColor) {\n  let color;\n  const DEFAULT = PRIMARY_COLOR[0];\n  const GREEN = PRIMARY_COLOR[1];\n  const CYAN = PRIMARY_COLOR[2];\n  const BLUE = PRIMARY_COLOR[3];\n  const ORANGE = PRIMARY_COLOR[4];\n  const RED = PRIMARY_COLOR[5];\n\n  switch (themeColor) {\n    case 'green':\n      color = GREEN;\n      break;\n    case 'cyan':\n      color = CYAN;\n      break;\n    case 'blue':\n      color = BLUE;\n      break;\n    case 'orange':\n      color = ORANGE;\n      break;\n    case 'red':\n      color = RED;\n      break;\n    default:\n      color = DEFAULT;\n  }\n  return color;\n}\n\nconst initialState = {\n  themeMode: 'light',\n  themeDirection: 'ltr',\n  themeColor: 'default',\n  themeStretch: false,\n  onChangeMode: () => {},\n  onChangeDirection: () => {},\n  onChangeColor: () => {},\n  onToggleStretch: () => {},\n  setColor: PRIMARY_COLOR[0],\n  colorOption: []\n};\n\nconst SettingsContext = createContext(initialState);\n\nSettingsProvider.propTypes = {\n  children: PropTypes.node\n};\n\nfunction SettingsProvider({ children }) {\n  const [settings, setSettings] = useLocalStorage('settings', {\n    themeMode: initialState.themeMode,\n    themeDirection: initialState.themeDirection,\n    themeColor: initialState.themeColor,\n    themeStretch: initialState.themeStretch\n  });\n\n  const onChangeMode = (event) => {\n    setSettings({\n      ...settings,\n      themeMode: event.target.value\n    });\n  };\n\n  const onChangeDirection = (event) => {\n    setSettings({\n      ...settings,\n      themeDirection: event.target.value\n    });\n  };\n\n  const onChangeColor = (event) => {\n    setSettings({\n      ...settings,\n      themeColor: event.target.value\n    });\n  };\n\n  const onToggleStretch = () => {\n    setSettings({\n      ...settings,\n      themeStretch: !settings.themeStretch\n    });\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        ...settings,\n        // Mode\n        onChangeMode,\n        // Direction\n        onChangeDirection,\n        // Color\n        onChangeColor,\n        setColor: SetColor(settings.themeColor),\n        colorOption: PRIMARY_COLOR.map((color) => ({\n          name: color.name,\n          value: color.main\n        })),\n        // Stretch\n        onToggleStretch\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport { SettingsProvider, SettingsContext };\n","import { useContext } from 'react';\nimport { SettingsContext } from '../contexts/SettingsContext';\n\n// ----------------------------------------------------------------------\n\nconst useSettings = () => useContext(SettingsContext);\n\nexport default useSettings;\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nimport FarmActions from \"./components/farmActions\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFarmCard.propTypes = {\r\n    farm: PropTypes.object.isRequired,\r\n    displayApr: PropTypes.any,\r\n    udePrice: PropTypes.any\r\n};\r\n\r\nexport default function FarmCard({ farm, displayApr, udePrice, ...other }) {\r\n    const { account } = useActiveWeb3React()\r\n    const { id, stakeAssetImage, userData } = farm;\r\n\r\n    const totalValueFormatted =\r\n        farm.liquidity && farm.liquidity.gt(0)\r\n            ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n            : '$0.00'\r\n\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('METAPLE', '')\r\n    const earnLabel = farm.dual ? farm.dual.earnLabel : 'MLX + Fees'\r\n\r\n    const weight = farm.poolWeight.toNumber() || 0\r\n    // console.log(farm?.quoteToken.address)\r\n\r\n    return (\r\n    <>\r\n        <div className=\"col-span-1\">\r\n            <div className=\"p-5 border-gray-300 shadow-xl hover:shadow-2xl bg-white dark:bg-black bg-opacity-100 dark:bg-opacity-50 rounded-3xl transition-all\">\r\n                <div className=\"relative\">\r\n                    <div className=\"bg-gradient-to-r from-sky-700 to-blue-700 bg-opacity-25 rounded-3xl overflow-hidden z-10\">\r\n                        <div className=\"px-6 py-6 transition-all flex align-middle justify-between relative z-10\">\r\n                            <div className=\"w-32 h-32 bg-circle bg-white rounded-full opacity-10 absolute pin-t ml-8 p-2 z-20 top-0 right-0 -mr-14 -mt-14\" />\r\n                            <div className=\"w-32 h-32 bg-circle bg-white rounded-full opacity-5 absolute pin-t ml-8 p-2 z-20 bottom-0 left-0 -ml-14 -mb-14\" />\r\n                            <div>\r\n                                <div className=\"text-white font-semibold mb-3 text-sm\">\r\n                                    {lpLabel}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"text-white font-semibold mb-3 text-sm\">Earn MLX </div>\r\n                                {/*<div className=\"text-white font-semibold text-xs cursor-help text-right\" readOnly>*/}\r\n                                {/*    {}*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex align-middle justify-center -mt-6 mb-15 relative z-10\">\r\n                    <div className=\"rounded-full overflow-hidden -mx-2\">\r\n                        <img src={`./tokens/${farm?.quoteToken.address}.png`} className=\"rounded-full border-0 border-white\" width={45} alt=\"\" />\r\n                    </div>\r\n                    {/*<div className=\"rounded-full overflow-hidden -mx-2\">*/}\r\n                    {/*    <img src=\"images/dai.png\" className=\"rounded-full border-0 border-white\" width={45} alt=\"\" />*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                {/* <div class=\"flex justify-center my-6\">\r\n                                      <div class=\"w-auto px-5 pt-3 pb-2 bg-white text-green-800 text-sm rounded-full font-semibold\">Active For LDO Only</div>\r\n                                  </div> */}\r\n                <div className=\"flex justify-between mb-1\">\r\n                    <div className=\"text-black dark:text-white dark:text-opacity-70 mb-3 text-xs font-semibold\">\r\n                        Earn\r\n                    </div>\r\n                    <div className=\"text-black dark:text-white font-semibold text-xs\">\r\n                        {earnLabel}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-between mb-1\">\r\n                    <div className=\"text-black dark:text-white dark:text-opacity-70 mb-3 text-xs font-semibold\">\r\n                        Multiplier\r\n                    </div>\r\n                    <div className=\"text-black dark:text-white font-semibold text-xs\">\r\n                        {Math.round(weight*100)}x\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-between mb-1\">\r\n                    <div className=\"text-black dark:text-white dark:text-opacity-70 mb-3 text-xs font-semibold\">\r\n                        Liquidity\r\n                    </div>\r\n                    <div className=\"text-black dark:text-white font-semibold text-xs\">\r\n                        {totalValueFormatted}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex justify-between mb-1\">\r\n                    <div className=\"text-black dark:text-white dark:text-opacity-70 mb-3 text-xs font-semibold\">\r\n                        Total APR\r\n                    </div>\r\n                    <div className=\"text-black dark:text-white font-semibold text-xs\">\r\n                        {displayApr}%\r\n                    </div>\r\n                </div>\r\n                {/*<div className=\"flex justify-between mb-1\">*/}\r\n                {/*    <div className=\"text-black dark:text-white dark:text-opacity-70 font-semibold mb-3 text-xs font-semibold\">  – Pool APY</div>*/}\r\n                {/*    <div className=\"text-black dark:text-white font-semibold text-xs\">5.19%</div>*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"flex justify-between mb-1\">*/}\r\n                {/*    <div className=\"text-black dark:text-white dark:text-opacity-70 font-semibold mb-3 text-xs font-semibold\">  – LDO Farming APY</div>*/}\r\n                {/*    <div className=\"text-black dark:text-white font-semibold text-xs\">17.16%</div>*/}\r\n                {/*</div>*/}\r\n                {/*<button className=\"px-2 py-4 mt-2 text-center text-sm text-white bg-indigo-900 rounded-lg w-full font-medium hover:bg-blue-800 transition-all\">*/}\r\n                {/*    <span>Connect Wallet</span>*/}\r\n                {/*</button>*/}\r\n                <FarmActions farm={farm} lpLabel={lpLabel} account={account} udePrice={udePrice} />\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n","import React, {useCallback} from \"react\";\r\nimport MTPLCreatePool from \"./pool-mtpl\";\r\nimport useActiveWeb3React from \"../hooks/useWeb3\";\r\nimport useSettings from \"../hooks/useSettings\";\r\nimport {useDispatch} from \"../redux/store\";\r\nimport {useFarms, usePollFarmsWithUserData, usePriceUdeBusd} from \"../state/farms/hooks\";\r\nimport isArchivedPid from \"../utils/farmHelpers\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {getFarmApr} from \"../utils/apr\";\r\nimport {ChainId} from \"@udegoswap/sdk\";\r\nimport {FarmCard} from \"./farm-mtpl\";\r\n\r\nconst getDisplayApr = (udeRewardsApr=0, lpRewardsApr=0) => {\r\n  if (udeRewardsApr && lpRewardsApr) {\r\n    return (udeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  if (udeRewardsApr) {\r\n    return udeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  return null\r\n}\r\n\r\nconst MTPLFarming = () => {\r\n\r\n  const { account } = useActiveWeb3React()\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const udePrice = usePriceUdeBusd()\r\n\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  usePollFarmsWithUserData(false)\r\n\r\n  const farmsList = useCallback(\r\n      (farmsToDisplay) => {\r\n        const farmsToDisplayWithAPR = farmsToDisplay.map((farm) => {\r\n          if (!farm.lpTotalInQuoteToken || !farm.quoteTokenPriceBusd) {\r\n            return farm\r\n          }\r\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd)\r\n          const { udeRewardsApr, lpRewardsApr } = getFarmApr(new BigNumber(farm.poolWeight), udePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\r\n\r\n          return { ...farm, apr: udeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\r\n        })\r\n\r\n        return farmsToDisplayWithAPR\r\n      },\r\n      [udePrice],\r\n  )\r\n\r\n  const choseFarms = farmsList(activeFarms)\r\n  // console.log(choseFarms)\r\n  \r\n  return (\r\n    <>\r\n    <div className='mx-auto lg:ml-64'>\r\n      <div className='hero-section px-5 py-4 md:px-10 md:py-4 h-full relative'>\r\n        <nav className=\"flex items-center justify-between mb-4\">\r\n          <h2 className=\"title text-black dark:text-white text-opacity-75 text-3xl font-bold\">Farm LP Tokens & Harvest MLX</h2>\r\n          <MTPLCreatePool />\r\n        </nav>\r\n        <div className=\"grid grid-cols-1 xl:grid-cols-2 2xl:grid-cols-3 gap-5 md:gap-6 mb-8\">\r\n          {choseFarms && choseFarms.map((farm) => (\r\n              <FarmCard\r\n                  farm={farm}\r\n                  displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n                  udePrice={udePrice}\r\n              />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n  \r\nexport default MTPLFarming;"],"names":["PRIMARY_COLOR","name","lighter","light","main","dark","darker","contrastText","SetColor","themeColor","color","DEFAULT","GREEN","CYAN","BLUE","ORANGE","RED","propTypes","PropTypes","initialState","themeMode","themeDirection","themeStretch","onChangeMode","onChangeDirection","onChangeColor","onToggleStretch","setColor","colorOption","SettingsContext","createContext","useContext","FarmCard","farm","displayApr","udePrice","account","useActiveWeb3React","totalValueFormatted","id","stakeAssetImage","userData","liquidity","gt","toNumber","toLocaleString","undefined","maximumFractionDigits","lpLabel","lpSymbol","toUpperCase","replace","earnLabel","dual","weight","poolWeight","className","src","quoteToken","address","width","alt","Math","round","getDisplayApr","udeRewardsApr","lpRewardsApr","useSettings","useDispatch","useFarms","farmsLP","data","userDataLoaded","usePriceUdeBusd","activeFarms","filter","pid","multiplier","isArchivedPid","usePollFarmsWithUserData","choseFarms","useCallback","farmsToDisplay","map","lpTotalInQuoteToken","quoteTokenPriceBusd","totalLiquidity","BigNumber","times","getFarmApr","lpAddresses","ChainId","apr","farmsList"],"sourceRoot":""}