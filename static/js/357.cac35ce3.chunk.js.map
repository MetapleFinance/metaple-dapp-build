{"version":3,"file":"static/js/357.cac35ce3.chunk.js","mappings":"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","sources":["pages/MTPLProfile.js","pages/referral/refercard.js","pages/MTPLReferral.js","../node_modules/@material-ui/core/DialogActions/dialogActionsClasses.js","../node_modules/@material-ui/core/DialogActions/DialogActions.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\n// material\r\nimport {\r\n    Button,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText, DialogActions, Dialog,\r\n    List, ListItem, ListItemAvatar, Avatar, ListItemText,\r\n    Typography, Grid, TextField, IconButton\r\n} from '@material-ui/core';\r\nimport {useWeb3React} from \"@web3-react/core\";\r\n// import {QRCode} from \"react-qrcode-logo\";\r\n// import {\r\n//     CheckCircleRounded,\r\n//     CloseOutlined,\r\n//     OpenInNewRounded,\r\n//     QrCodeScannerRounded,\r\n// } from \"@material-ui/icons\";\r\n\r\nimport useConnect from \"../hooks/useConnect\";\r\nimport {shortAddress} from \"../utils/pageHelpers\";\r\nimport {appConstants, EXPLORER} from \"../config/constants\";\r\nimport {ALL_TOKENS} from \"../contexts/TokenList\";\r\n\r\nexport default function MTPLProfile() {\r\n    const anchorRef = useRef(null);\r\n    const { account } = useWeb3React()\r\n    const { logout } = useConnect()\r\n    const [openScan, setScan] = useState(false);\r\n    const [recipentAddress, setRecipent] = useState(\"\");\r\n    const [scanError, setScanError] = useState(null);\r\n    // const navigate = useNavigate();\r\n    // const { enqueueSnackbar } = useSnackbar();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleScan = (data) => {\r\n        console.log(data)\r\n        setScanError(null)\r\n        if(data){\r\n            setRecipent(data.text)\r\n            toggleScan()\r\n        }\r\n    }\r\n    const handleError = (err) => {\r\n        setScanError(err.toString())\r\n        console.log(err)\r\n    }\r\n\r\n    const toggleScan = () => {\r\n        setScan(!openScan)\r\n    }\r\n\r\n    const checkLoad = (val) => {\r\n        console.log(val)\r\n    }\r\n\r\n    const inputRecipent = (val) => {\r\n        setRecipent(val.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/*<Button*/}\r\n            {/*    */}\r\n            {/*    variant=\"contained\"*/}\r\n            {/*    sx={{*/}\r\n            {/*        padding: 1,*/}\r\n            {/*        height: 44,*/}\r\n            {/*        borderRadius: '25px'*/}\r\n            {/*    }}*/}\r\n            {/*>*/}\r\n            {/*    {shortAddress(account)}*/}\r\n            {/*</Button>*/}\r\n\r\n            <button\r\n                onClick={handleClickOpen}\r\n                className=\"px-4 py-3 text-sm text-center text-white bg-gradient-to-r from-sky-600 to-blue-900 rounded-lg font-medium hover:from-sky-800 hover:to-indigo-800 transition-all disabled:bg-opacity-50\"\r\n            >\r\n              <span>\r\n                  {\r\n                      shortAddress(account)\r\n                  }\r\n              </span>\r\n            </button>\r\n\r\n            <Dialog open={open} maxWidth='md' onClose={handleClose}>\r\n                <DialogTitle>\r\n                    <a href={`${EXPLORER}address/${account}/`} target=\"_blank\" rel=\"noreferrer\">{shortAddress(account)} <i className={\"las la-external-link\"} /></a>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {/*<DialogContentText>*/}\r\n                    {/*    <b>Explore Metaple Profile!</b><br />View recent transactions, Quick tools for UDE Tokens, and many more.. </DialogContentText>*/}\r\n                    {/*<Grid container spacing={2} sx={{textAlign:'center'}}>*/}\r\n                    {/*    /!*<Grid item xs={12} lg={12} md={12}>*!/*/}\r\n                    {/*    /!*    <h2>Receive UDE (or Any Token)</h2>*!/*/}\r\n                    {/*    /!*    <QRCode size={240} logoImage={`/tokens/${appConstants.symbol.toLowerCase()}.png`} value={account} />*!/*/}\r\n                    {/*    /!*</Grid>*!/*/}\r\n                    {/*    /!* <Grid item xs={12} lg={6} md={6} sx={{display: 'flex', alignItems:'center'}}> *!/*/}\r\n                    {/*    /!*    <div> *!/*/}\r\n                    {/*    /!*        <h2>Send UDE</h2> *!/*/}\r\n                    {/*    /!*        <Grid container spacing={1}> *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                { *!/*/}\r\n                    {/*    /!*                    openScan && <QrReader *!/*/}\r\n                    {/*    /!*                        onLoad={checkLoad} *!/*/}\r\n                    {/*    /!*                        facingMode='back' *!/*/}\r\n                    {/*    /!*                        delay={500} *!/*/}\r\n                    {/*    /!*                        style={{ *!/*/}\r\n                    {/*    /!*                            height: 240, *!/*/}\r\n                    {/*    /!*                            width: 320, *!/*/}\r\n                    {/*    /!*                        }} *!/*/}\r\n                    {/*    /!*                        onError={handleError} *!/*/}\r\n                    {/*    /!*                        onScan={handleScan} *!/*/}\r\n                    {/*    /!*                    /> *!/*/}\r\n                    {/*    /!*                } *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*            { *!/*/}\r\n                    {/*    /!*                (openScan && scanError) && *!/*/}\r\n                    {/*    /!*                <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                    {scanError} *!/*/}\r\n                    {/*    /!*                </Grid> *!/*/}\r\n                    {/*    /!*            } *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                { *!/*/}\r\n                    {/*    /!*                    !openScan && <Button variant=\"contained\" onClick={toggleScan}> *!/*/}\r\n                    {/*    /!*                        Scan <QrCodeScannerRounded /> *!/*/}\r\n                    {/*    /!*                    </Button> *!/*/}\r\n                    {/*    /!*                } *!/*/}\r\n\r\n                    {/*    /!*                { *!/*/}\r\n                    {/*    /!*                    openScan && <Button variant=\"contained\" onClick={toggleScan} color=\"error\"> *!/*/}\r\n                    {/*    /!*                        Close <CloseOutlined /> *!/*/}\r\n                    {/*    /!*                    </Button> *!/*/}\r\n                    {/*    /!*                } *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                <TextField value={recipentAddress} onChange={inputRecipent} type=\"text\" fullWidth variant=\"filled\" label={`Enter ${appConstants.symbol} Address`} placeholder=\"Receiver Address\" title={`Enter ${appConstants.symbol} Address`} /> *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                <TextField type=\"number\" fullWidth variant=\"filled\" label={`Enter ${appConstants.symbol} Amount`} placeholder={`${appConstants.symbol} Amount to send`} title={`Enter ${appConstants.symbol} Amount`} /> *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*            <Grid item xs={12} md={12}> *!/*/}\r\n                    {/*    /!*                <Button variant=\"outlined\" fullWidth> *!/*/}\r\n                    {/*    /!*                    Quick Send *!/*/}\r\n                    {/*    /!*                </Button> *!/*/}\r\n                    {/*    /!*            </Grid> *!/*/}\r\n                    {/*    /!*        </Grid> *!/*/}\r\n                    {/*    /!*    </div> *!/*/}\r\n                    {/*    /!* </Grid> *!/*/}\r\n                    {/*</Grid>*/}\r\n                    <div>\r\n                        {/* <Grid container> */}\r\n                        {/* <Grid item xs={12} lg={6} md={6}> */}\r\n                        {/*    <h4>Your Balances</h4> */}\r\n                        {/*    <List> */}\r\n                        {/*        <ListItem */}\r\n                        {/*            button */}\r\n                        {/*            secondaryAction={ */}\r\n                        {/*                <Typography> */}\r\n                        {/*                    0 */}\r\n                        {/*                </Typography> */}\r\n                        {/*            } */}\r\n                        {/*        > */}\r\n                        {/*            <ListItemAvatar> */}\r\n                        {/*                <Avatar src=\"/tokens/bnb.png\" /> */}\r\n                        {/*            </ListItemAvatar> */}\r\n                        {/*            <ListItemText */}\r\n                        {/*                primary=\"BNB Balance\" */}\r\n                        {/*                secondary=\"BNB Balance in your wallet\" */}\r\n                        {/*            /> */}\r\n                        {/*        </ListItem> */}\r\n                        {/*        <ListItem */}\r\n                        {/*            button */}\r\n                        {/*            secondaryAction={ */}\r\n                        {/*                <Typography> */}\r\n                        {/*                    0 */}\r\n                        {/*                </Typography> */}\r\n                        {/*            } */}\r\n                        {/*        > */}\r\n                        {/*            <ListItemAvatar> */}\r\n                        {/*                <Avatar src=\"/tokens/ude.png\" /> */}\r\n                        {/*            </ListItemAvatar> */}\r\n                        {/*            <ListItemText */}\r\n                        {/*                primary={`${appConstants.symbol} Balance`} */}\r\n                        {/*                secondary={`${appConstants.symbol} Balance in your wallet`} */}\r\n                        {/*            /> */}\r\n                        {/*        </ListItem> */}\r\n                        {/*    </List> */}\r\n                        {/* </Grid> */}\r\n                        {/*    <Grid item xs={12} lg={6} md={6}> */}\r\n                        {/*        <h4>UDE LP Balances</h4> */}\r\n                        {/*        <List> */}\r\n                        {/*            <ListItem */}\r\n                        {/*                button */}\r\n                        {/*                secondaryAction={ */}\r\n                        {/*                    <Typography> */}\r\n                        {/*                        0 */}\r\n                        {/*                    </Typography> */}\r\n                        {/*                } */}\r\n                        {/*            > */}\r\n                        {/*                <ListItemAvatar> */}\r\n                        {/*                    <div style={{display: 'flex'}}> */}\r\n                        {/*                        <Avatar src=\"/tokens/bnb.png\" /> */}\r\n                        {/*                        <Avatar src={`/tokens/${appConstants.symbol.toLowerCase()}.png`} sx={{marginLeft: '-20px', backgroundColor: 'white'}} /> */}\r\n                        {/*                    </div> */}\r\n                        {/*                </ListItemAvatar> */}\r\n                        {/*                <ListItemText */}\r\n                        {/*                    primary={`${appConstants.symbol.toUpperCase()}/BNB LP Balance`} */}\r\n                        {/*                    secondary=\"Liquidity Pool Tokens\" */}\r\n                        {/*                /> */}\r\n                        {/*            </ListItem> */}\r\n                        {/*            <ListItem */}\r\n                        {/*                button */}\r\n                        {/*                secondaryAction={ */}\r\n                        {/*                    <Typography> */}\r\n                        {/*                        0 */}\r\n                        {/*                    </Typography> */}\r\n                        {/*                } */}\r\n                        {/*            > */}\r\n                        {/*                <ListItemAvatar> */}\r\n                        {/*                    <div style={{display: 'flex'}}> */}\r\n                        {/*                        <Avatar src={`/tokens/${ALL_TOKENS.busd}.png`} /> */}\r\n                        {/*                        <Avatar src={`/tokens/${appConstants.symbol.toLowerCase()}.png`} sx={{marginLeft: '-20px', backgroundColor: 'white'}} /> */}\r\n                        {/*                    </div> */}\r\n                        {/*                </ListItemAvatar> */}\r\n                        {/*                <ListItemText */}\r\n                        {/*                    primary={`${appConstants.symbol.toUpperCase()}/BUSD LP Balance`} */}\r\n                        {/*                    secondary=\"Liquidity Pool Tokens\" */}\r\n                        {/*                /> */}\r\n                        {/*            </ListItem> */}\r\n                        {/*            <ListItem */}\r\n                        {/*                button */}\r\n                        {/*                secondaryAction={ */}\r\n                        {/*                    <Typography> */}\r\n                        {/*                        0 */}\r\n                        {/*                    </Typography> */}\r\n                        {/*                } */}\r\n                        {/*            > */}\r\n                        {/*                <ListItemAvatar> */}\r\n                        {/*                    <div style={{display: 'flex'}}> */}\r\n                        {/*                        <Avatar src={`/tokens/${ALL_TOKENS.cake}.png`} /> */}\r\n                        {/*                        <Avatar src={`/tokens/${appConstants.symbol.toLowerCase()}.png`} sx={{marginLeft: '-20px', backgroundColor: 'white'}} /> */}\r\n                        {/*                    </div> */}\r\n                        {/*                </ListItemAvatar> */}\r\n                        {/*                <ListItemText */}\r\n                        {/*                    primary={`${appConstants.symbol.toUpperCase()}/CAKE LP Balance`} */}\r\n                        {/*                    secondary=\"Liquidity Pool Tokens\" */}\r\n                        {/*                /> */}\r\n                        {/*            </ListItem> */}\r\n                        {/*        </List> */}\r\n                        {/*    </Grid> */}\r\n                        {/* </Grid> */}\r\n                        {/* <hr /> */}\r\n                        {/* <h2>Recent Transactions</h2> */}\r\n\r\n                        {/* <List> */}\r\n                        {/*    <ListItem */}\r\n                        {/*        secondaryAction={ */}\r\n                        {/*            <IconButton> */}\r\n                        {/*                <OpenInNewRounded /> */}\r\n                        {/*            </IconButton> */}\r\n                        {/*        } */}\r\n                        {/*    > */}\r\n                        {/*        <ListItemAvatar> */}\r\n                        {/*            <CheckCircleRounded color=\"success\" /> */}\r\n                        {/*        </ListItemAvatar> */}\r\n                        {/*        <ListItemText */}\r\n                        {/*            primary=\"SWAP\" */}\r\n                        {/*            secondary=\"Swapped 0.1 BNB For 100 UDE\" */}\r\n                        {/*        /> */}\r\n                        {/*    </ListItem> */}\r\n\r\n                        {/*    <ListItem */}\r\n                        {/*        secondaryAction={ */}\r\n                        {/*            <IconButton> */}\r\n                        {/*                <OpenInNewRounded /> */}\r\n                        {/*            </IconButton> */}\r\n                        {/*        } */}\r\n                        {/*    > */}\r\n                        {/*        <ListItemAvatar> */}\r\n                        {/*            <CheckCircleRounded color=\"success\" /> */}\r\n                        {/*        </ListItemAvatar> */}\r\n                        {/*        <ListItemText */}\r\n                        {/*            primary=\"POOL\" */}\r\n                        {/*            secondary=\"Added 0.1 BNB and 100 UDE\" */}\r\n                        {/*        /> */}\r\n                        {/*    </ListItem> */}\r\n\r\n                        {/*    <ListItem */}\r\n                        {/*        secondaryAction={ */}\r\n                        {/*            <IconButton> */}\r\n                        {/*                <OpenInNewRounded /> */}\r\n                        {/*            </IconButton> */}\r\n                        {/*        } */}\r\n                        {/*    > */}\r\n                        {/*        <ListItemAvatar> */}\r\n                        {/*            <CheckCircleRounded color=\"success\" /> */}\r\n                        {/*        </ListItemAvatar> */}\r\n                        {/*        <ListItemText */}\r\n                        {/*            primary=\"FARMING\" */}\r\n                        {/*            secondary=\"Harvested 12.32 UDE from Farming\" */}\r\n                        {/*        /> */}\r\n                        {/*    </ListItem> */}\r\n\r\n                        {/*    <ListItem */}\r\n                        {/*        secondaryAction={ */}\r\n                        {/*            <IconButton> */}\r\n                        {/*                <OpenInNewRounded /> */}\r\n                        {/*            </IconButton> */}\r\n                        {/*        } */}\r\n                        {/*    > */}\r\n                        {/*        <ListItemAvatar> */}\r\n                        {/*            <CheckCircleRounded color=\"success\" /> */}\r\n                        {/*        </ListItemAvatar> */}\r\n                        {/*        <ListItemText */}\r\n                        {/*            primary=\"STAKING\" */}\r\n                        {/*            secondary=\"Staked 2423.32 UDE in UDE Pool\" */}\r\n                        {/*        /> */}\r\n                        {/*    </ListItem> */}\r\n                        {/* </List> */}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button\r\n                        onClick={logout}\r\n                        color=\"error\"\r\n                        variant=\"contained\"\r\n                        className=\"px-4 py-3 text-sm text-center text-white bg-red-500 from-sky-600 to-blue-900 rounded-lg font-medium hover:from-sky-800 hover:to-indigo-800 transition-all disabled:bg-opacity-50\"\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                    <button\r\n                        onClick={handleClose}\r\n                        variant=\"contained\"\r\n                        className=\"px-4 py-3 text-sm text-center text-white bg-gradient-to-r from-sky-600 to-blue-900 rounded-lg font-medium hover:from-sky-800 hover:to-indigo-800 transition-all disabled:bg-opacity-50\"\r\n                    >\r\n                        Close\r\n                    </button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport {toast} from \"react-toastify\";\r\nimport {REFER_LINK, WALLET_ADDRESS} from \"../../config/config\";\r\nimport {showError} from \"../../config/helpers\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\n\r\n\r\nconst ReferCard = () => {\r\n    const { account } = useActiveWeb3React()\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [referLink, setRefer] = useState('');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [transition, setTransition] = React.useState(undefined);\r\n    const [message, setMessage] = useState('')\r\n    const getReferL = () => {\r\n        const nowAddress = account;\r\n        if(!account){\r\n            showError(\"Connect wallet!!\")\r\n            return\r\n        }\r\n        setRefer(REFER_LINK+nowAddress);\r\n    }\r\n    const getReferLink = async () => {\r\n        const nowAddress = account;\r\n        if(!account){\r\n            showError(\"Connect wallet!!\")\r\n            return\r\n        }\r\n        setRefer(REFER_LINK+nowAddress);\r\n        try{\r\n            navigator.clipboard.writeText(REFER_LINK+nowAddress)\r\n            toast.success('Copied Successfully!', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        } catch (e) {\r\n            showError(`Could Not Copy To Clipboard - ${e}`)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getReferL()\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"relative pt-10 pb-10 px-6 2xl:pt-20 2xl:pb-20 bg-blueGray-100 rounded-b-10xl\">\r\n            <div className=\"relative max-w-lg mx-auto\">\r\n                <img className=\"absolute top-1/2 transform -translate-y-1/2\" src=\"images/bg-form.svg\" alt=\"\" />\r\n                <div className=\"shadow-lg shadow-sky-500/40 hover:shadow-2xl bg-gradient-to-r from-sky-900 to-blue-900 bg-opacity-50 rounded-3xl py-10 lg:py-20 px-8 lg:px-10 m-5 border-t-4 border-opacity-30 border-gray-100 relative z-10\">\r\n                    <div className=\"w-20 h-20 md:w-40 md:h-40 bg-circle bg-white rounded-full opacity-10 absolute pin-t ml-8 p-2 z-20 top-0 right-0 -mr-14 -mt-14\" />\r\n                    <div className=\"w-20 h-20 md:w-40 md:h-40 bg-circle bg-white rounded-full opacity-5 absolute pin-t ml-8 p-2 z-20 bottom-0 left-0 -ml-14 -mb-14\" />\r\n                    <h3 className=\"text-3xl leading-10 text-white text-center mb-6\">Referral Link</h3>\r\n                    {/* <p class=\"text-base text-white leading-8 font-medium mb-10\">Fusce sodales vitae lorem vitae now tempus.</p> */}\r\n                    <div className=\"relative md:mb-8\">\r\n                        {/* <img class=\"z-10 absolute top-1/2 transform -translate-y-1/2 left-8\" src=\"images/mail.svg\" alt=\"\"> */}\r\n                        <div className=\"referral-link w-full text-xs text-center px-4 py-3 h-auto md:max-h-16 bg-blueGray-50 rounded-lg text-sky-900 dark:text-sky-900 border-2 border-sky-500 flex align-middle justify-center bg-white bg-opacity-80 break-words break-all\">\r\n                            {\r\n                                referLink === '' ? \"Click to generate link\" : referLink\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <a onClick={getReferLink} className=\"block py-4 px-6 mt-3 md:mx-auto w-full md:max-w-max text-sm leading-6 text-white font-medium tracking-tighter font-heading text-center bg-sky-700 hover:bg-sky-600 focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 rounded-lg\" href=\"#\">\r\n                        Generate &amp; Copy Link\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className=\"absolute w-20 transform -translate-x-1/2 xl:w-auto left-1/2 md:left-0 top-0 md:top-20 xl:top-1/2 -translate-y-1/2 flex align-middle justify-center\">\r\n                {/* <span class=\"absolute top-11 left-11 inline-flex h-10 w-10 rounded-full bg-white opacity-75\"></span> */}\r\n                <svg width={132} height={132} viewBox=\"0 0 132 132\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"relative\">\r\n                    {/* <circle cx=\"66\" cy=\"66\" r=\"65.25\" transform=\"rotate(-90 66 66)\" fill=\"white\" stroke=\"#E4EBF3\" stroke-width=\"1.5\"/> */}\r\n                    <circle cx={66} cy={66} r={41} transform=\"rotate(-90 66 66)\" fill=\"#EFF1F5\" fillOpacity=\"0.1\" className />\r\n                    <circle cx={66} cy={66} r={21} transform=\"rotate(-90 66 66)\" fill=\"white\" fillOpacity=\"0.8\" />\r\n                    <path d=\"M68.8 60L73 66H59\" stroke=\"#303030\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    <path d=\"M69 71L73 66\" stroke=\"#303030\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReferCard;","import React, {useEffect, useState} from \"react\";\r\n// importing Link from react-router-dom to navigate to\r\n// different end points.\r\nimport { Link } from \"react-router-dom\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport useActiveWeb3React from \"../hooks/useWeb3\";\r\nimport {getContract} from \"../config/helpers\";\r\nimport {FARMING} from \"../config/constants\";\r\nimport {farmingABI} from \"../config/abis\";\r\nimport {formatEther} from \"@ethersproject/units\";\r\nimport ReferCard from \"./referral/refercard\";\r\nimport MTPLCreatePool from \"./pool-mtpl\";\r\nimport ConnectWallet from \"../components/mtpl/ConnectWallet\";\r\nimport {shortAddress} from \"../utils/pageHelpers\";\r\nimport MTPLProfile from \"./MTPLProfile\";\r\n\r\nconst MTPLReferral = () => {\r\n    const { account } = useActiveWeb3React()\r\n\r\n    const [farmRewards, setFarm] = useState(0);\r\n    const [stakeRewards, setStake] = useState(0);\r\n\r\n    const getRewards = async () => {\r\n        try{\r\n            if(!account) return\r\n            const farming = await getContract(FARMING, farmingABI)\r\n            const rewards = await farming.getRewards(account)\r\n            // console.log(rewards)\r\n            setFarm(rewards[0])\r\n            setStake(rewards[1])\r\n        }catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const inter = setInterval(() => getRewards(), 5000)\r\n        return (() => clearInterval(inter))\r\n    }, []);\r\n    return (\r\n        <>\r\n            <div className='mx-auto lg:ml-64'>\r\n                <div className='hero-section px-5 py-4 md:px-10 md:py-8 h-full relative'>\r\n                    <nav className=\"flex items-center justify-between mb-4\">\r\n                        <h2 className=\"title text-black dark:text-white text-opacity-75 text-3xl font-bold\">Referral</h2>\r\n                        {\r\n                            !account && <ConnectWallet />\r\n                        }\r\n                        {\r\n                            account &&\r\n                            <MTPLProfile />\r\n                        }\r\n                    </nav>\r\n                    <section className=\"font-medium\">\r\n                        <div className=\"md:grid md:grid-cols-2 md:items-center\">\r\n                            <div className=\"container mx-auto max-w-2xl md:pb-0 pb-10 md:py-0\">\r\n                                <span className=\"inline-block mb-5 uppercase tracking-widest text-sm text-sky-900 dark:text-gray-300 leading-4 font-bold\">Earn MLX</span>\r\n                                <h2 className=\"mb-8 font-heading text-3xl xl:text-10xl leading-tight text-gray-800 dark:text-white\">Invite Your Friends!</h2>\r\n                                <h3 className=\"mb-5 xl:mb-10 max-w-lg font-heading text-3sm xl:text-xl leading-10 text-gray-800 dark:text-white\">Earn 5% commission reward from your friend's earnings generated from Farms &amp; Staking Pools.</h3>\r\n                                <section className=\"py-0 overflow-hidden\">\r\n                                    <div className=\"container mx-auto\">\r\n                                        <div className=\"grid grid-cols-1 2xl:grid-cols-2 gap-5 md:gap-4\">\r\n                                            <div className=\"md:block col-span-1 md:col-span-1\">\r\n                                                <div className=\"flex items-center\">\r\n                                                    <div className=\"flex-shrink-0 text-center mr-3\">\r\n                                                        <div className=\"h-25 w-auto flex items-center justify-center bg-sky-600 rounded-t-3xl px-4 py-6\">\r\n                                                            <div className=\"text-white text-xl\">\r\n                                                                {parseFloat(formatEther(farmRewards)).toFixed(4)}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"py-4 px-2 bg-sky-800 rounded-b-3xl\">\r\n                                                            <span className=\"font-heading font-bold text-white\">MLX</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <h3 className=\"mb-4 text-lg font-heading font-medium text-gray-800 dark:text-white\">Farm Referral</h3>\r\n                                                        <p className=\"text-gray-400 text-xs leading-6\">Referral Earnings on Farm Rewards your Refer earns.</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"md:block col-span-1 md:col-span-1\">\r\n                                                <div className=\"flex items-center\">\r\n                                                    <div className=\"flex-shrink-0 text-center mr-3\">\r\n                                                        <div className=\"h-25 w-auto flex items-center justify-center bg-sky-600 rounded-t-3xl px-4 py-6\">\r\n                                                            <div className=\"text-white text-xl\">\r\n                                                                {parseFloat(formatEther(stakeRewards)).toFixed(4)}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"py-4 px-2 bg-sky-800 rounded-b-3xl\">\r\n                                                            <span className=\"font-heading font-bold text-white\">MLX</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <h3 className=\"mb-4 text-lg font-heading font-medium text-gray-800 dark:text-white\">Staking Referral</h3>\r\n                                                        <p className=\"text-gray-400 text-xs leading-6\">Referral Earnings on Stake Rewards your Refer earns.</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                            <ReferCard />\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MTPLReferral;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogActions;"],"names":["MTPLProfile","useRef","account","useWeb3React","logout","useConnect","useState","open","setOpen","handleClose","onClick","className","shortAddress","maxWidth","onClose","href","EXPLORER","target","rel","color","variant","useActiveWeb3React","setLoading","referLink","setRefer","React","undefined","getReferLink","nowAddress","showError","REFER_LINK","navigator","clipboard","writeText","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","e","useEffect","getReferL","src","alt","width","height","viewBox","fill","xmlns","cx","cy","r","transform","fillOpacity","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","farmRewards","setFarm","stakeRewards","setStake","getRewards","getContract","FARMING","farmingABI","farming","rewards","console","log","inter","setInterval","clearInterval","ConnectWallet","parseFloat","formatEther","toFixed","getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_extends","display","alignItems","padding","justifyContent","flex","marginLeft","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx"],"sourceRoot":""}